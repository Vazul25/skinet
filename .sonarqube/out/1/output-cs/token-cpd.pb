ù
]C:\programozas\udemy\skinet\DAL\Data\EntityConfiguration\DeliveryMethodEntityConfiguration.cs
	namespace		 	
DAL		
 
.		 
EntityConfiguration		 !
{

 
class 	-
!DeliveryMethodEntityConfiguration
 +
:, -$
IEntityTypeConfiguration. F
<F G
DeliveryMethodG U
>U V
{ 
private 
ISeedService 
_seedService )
;) *
public -
!DeliveryMethodEntityConfiguration 0
(0 1
ISeedService1 =
seedService> I
)I J
{ 	
_seedService 
= 
seedService &
;& '
} 	
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
DeliveryMethod0 >
>> ?
builder@ G
)G H
{ 	
builder 
. 
HasData 
( 
_seedService (
.( )
DeliveryMethods) 8
)8 9
;9 :
builder 
. 
Property 
( 
d 
=> !
d" #
.# $
Price$ )
)) *
.* +
HasColumnType+ 8
(8 9
$str9 H
)H I
;I J
} 	
} 
} ﬁ
TC:\programozas\udemy\skinet\DAL\Data\EntityConfiguration\OrderEntityConfiguration.cs
	namespace 	
DAL
 
. 
EntityConfiguration !
{		 
class

 	$
OrderEntityConfiguration


 "
:

# $$
IEntityTypeConfiguration

% =
<

= >
Order

> C
>

C D
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Order0 5
>5 6
builder7 >
)> ?
{ 	
builder 
. 
OwnsOne 
( 
o 
=>  
o! "
." #
ShipToAddress# 0
,0 1
a2 3
=>4 6
{ 
a 
. 
	WithOwner 
( 
) 
;  
} 
) 
; 
builder 
. 
Property 
( 
s 
=> !
s" #
.# $
Status$ *
)* +
.+ ,
HasConversion, 9
(9 :
o 
=> 
o 
. 
ToString 
(  
)  !
,! "
o 
=> 
( 
OrderStatus !
)! "
Enum" &
.& '
Parse' ,
(, -
typeof- 3
(3 4
OrderStatus4 ?
)? @
,@ A
oB C
)C D
)D E
;E F
builder 
. 
HasMany 
( 
o 
=>  
o! "
." #

OrderItems# -
)- .
.. /
WithOne/ 6
(6 7
)7 8
.8 9
OnDelete9 A
(A B
DeleteBehaviorB P
.P Q
CascadeQ X
)X Y
;Y Z
} 	
} 
} Ó	
XC:\programozas\udemy\skinet\DAL\Data\EntityConfiguration\OrderItemEntityConfiguration.cs
	namespace 	
DAL
 
. 
EntityConfiguration !
{		 
class

 	(
OrderItemEntityConfiguration


 &
:

' ($
IEntityTypeConfiguration

) A
<

A B
	OrderItem

B K
>

K L
{ 
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
	OrderItem0 9
>9 :
builder; B
)B C
{ 	
builder 
. 
OwnsOne 
( 
i 
=>  
i! "
." #
itemOrdered# .
,. /
io/ 1
=>1 3
{4 5
io6 8
.8 9
	WithOwner9 B
(B C
)C D
;D E
}F G
)G H
;H I
builder 
. 
Property 
( 
i 
=> !
i" #
.# $
Price$ )
)) *
.* +
HasColumnType+ 8
(8 9
$str9 H
)H I
;I J
} 	
} 
} ˙

[C:\programozas\udemy\skinet\DAL\Data\EntityConfiguration\ProductBrandEntityConfiguration.cs
	namespace		 	
DAL		
 
.		 
EntityConfiguration		 !
{

 
class 	+
ProductBrandEntityConfiguration
 )
:* +$
IEntityTypeConfiguration, D
<D E
ProductBrandE Q
>Q R
{ 
private 
readonly 
ISeedService %
_seedService& 2
;2 3
public +
ProductBrandEntityConfiguration .
(. /
ISeedService/ ;
seedService< G
)G H
{ 	
_seedService 
= 
seedService &
;& '
} 	
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
ProductBrand0 <
>< =
builder> E
)E F
{ 	
Console 
. 
	WriteLine 
( 
Environment )
.) *"
GetEnvironmentVariable* @
(@ A
$strA U
)U V
)V W
;W X
builder 
. 
HasData 
( 
_seedService (
.( )
ProductBrands) 6
)6 7
;7 8
} 	
} 
} ¯
VC:\programozas\udemy\skinet\DAL\Data\EntityConfiguration\ProductEntityConfiguration.cs
	namespace		 	
DAL		
 
.		 
EntityConfiguration		 !
{

 
class 	&
ProductEntityConfiguration
 $
:% &$
IEntityTypeConfiguration' ?
<? @
Product@ G
>G H
{ 
private 
readonly 
ISeedService %
_seedService& 2
;2 3
public &
ProductEntityConfiguration )
() *
ISeedService* 6
seedService7 B
)B C
{ 	
_seedService 
= 
seedService &
;& '
} 	
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
Product0 7
>7 8
builder9 @
)@ A
{ 	
builder 
. 
HasData 
( 
_seedService (
.( )
Products) 1
)1 2
;2 3
} 	
} 
} ê	
ZC:\programozas\udemy\skinet\DAL\Data\EntityConfiguration\ProductTypeEntityConfiguration.cs
	namespace		 	
DAL		
 
.		 
EntityConfiguration		 !
{

 
class 	*
ProductTypeEntityConfiguration
 (
:) *$
IEntityTypeConfiguration+ C
<C D
ProductTypeD O
>O P
{ 
private 
readonly 
ISeedService %
_seedService& 2
;2 3
public *
ProductTypeEntityConfiguration -
(- .
ISeedService. :
seedService; F
)F G
{ 	
_seedService 
= 
seedService &
;& '
} 	
public 
void 
	Configure 
( 
EntityTypeBuilder /
</ 0
ProductType0 ;
>; <
builder= D
)D E
{ 	
builder 
. 
HasData 
( 
_seedService (
.( )
ProductTypes) 5
)5 6
;6 7
} 	
} 
} Ì
CC:\programozas\udemy\skinet\DAL\Data\Repository\BasketRepository.cs
	namespace

 	
DAL


 
.

 
Data

 
.

 

Repository

 
{ 
public 

class 
BasketRepository !
:" #
IBasketRepository$ 5
{ 
private 
readonly 
	IDatabase "
	_database# ,
;, -
public 
BasketRepository 
(  
)  !
{ 	
} 	
public 
BasketRepository 
(  "
IConnectionMultiplexer  6
redis7 <
)< =
{ 	
	_database 
= 
redis 
. 
GetDatabase )
() *
)* +
;+ ,
} 	
public 
async 
Task 
< 
bool 
> 
DeleteBasketAsync  1
(1 2
string2 8
basketId9 A
)A B
{ 	
return 
await 
	_database "
." #
KeyDeleteAsync# 1
(1 2
basketId2 :
): ;
;; <
} 	
public 
async 
Task 
< 
CustomerBasket (
>( )
GetBasketAsync* 8
(8 9
string9 ?
basketId@ H
)H I
{ 	
var   
data   
=   
await   
	_database   &
.  & '
StringGetAsync  ' 5
(  5 6
basketId  6 >
)  > ?
;  ? @
return!! 
data!! 
.!! 
IsNullOrEmpty!! %
?!!& '
null!!( ,
:!!- .
JsonSerializer!!/ =
.!!= >
Deserialize!!> I
<!!I J
CustomerBasket!!J X
>!!X Y
(!!Y Z
data!!Z ^
)!!^ _
;!!_ `
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
CustomerBasket$$ (
>$$( )
UpdateBasketAsync$$* ;
($$; <
CustomerBasket$$< J
basket$$K Q
)$$Q R
{%% 	
var&& 
created&& 
=&& 
await&& 
	_database&&  )
.&&) *
StringSetAsync&&* 8
(&&8 9
basket&&9 ?
.&&? @
Id&&@ B
,&&B C
JsonSerializer&&D R
.&&R S
	Serialize&&S \
(&&\ ]
basket&&] c
)&&c d
,&&d e
TimeSpan&&e m
.&&m n
FromDays&&n v
(&&v w
$num&&w x
)&&x y
)&&y z
;&&z {
return'' 
!'' 
created'' 
?'' 
null'' "
:''# $
basket''% +
;''+ ,
}(( 	
})) 
}** ∫0
DC:\programozas\udemy\skinet\DAL\Data\Repository\GenericRepository.cs
	namespace 	
DAL
 
. 
Data 
. 

Repository 
{ 
public 

class 
GenericRepository "
<" #
T# $
>$ %
:& '
IGenericRepository( :
<: ;
T; <
>< =
where> C
TD E
:E F

BaseEntityG Q
{ 
private 
readonly 
StoreContext %
_context& .
;. /
public 
GenericRepository  
(  !
StoreContext! -
context. 5
)5 6
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
T 
> 
GetByIdAsync )
() *
int* -
id. 0
)0 1
{ 	
return 
await 
_context !
.! "
Set" %
<% &
T& '
>' (
(( )
)) *
.* +
	FindAsync+ 4
(4 5
id5 7
)7 8
;8 9
} 	
public 
async 
Task 
< 
IReadOnlyList '
<' (
T( )
>) *
>* +
GetByIdsAsync, 9
(9 :
int: =
[= >
]> ?
ids@ C
)C D
{ 	
return 
await 
_context !
.! "
Set" %
<% &
T& '
>' (
(( )
)) *
.* +
Where+ 0
(0 1
o1 2
=>2 4
ids4 7
.7 8
Contains8 @
(@ A
oA B
.B C
IdC E
)E F
)F G
.G H
ToListAsyncH S
(S T
)T U
;U V
} 	
public 
async 
Task 
< 
IReadOnlyList '
<' (
T( )
>) *
>* +
ListAllAsync, 8
(8 9
)9 :
{   	
return!! 
await!! 
_context!! !
.!!! "
Set!!" %
<!!% &
T!!& '
>!!' (
(!!( )
)!!) *
.!!* +
ToListAsync!!+ 6
(!!6 7
)!!7 8
;!!8 9
}"" 	
public$$ 
async$$ 
Task$$ 
<$$ 
T$$ 
>$$ 
GetEntityWithSpec$$ .
($$. /
ISpecification$$/ =
<$$= >
T$$> ?
>$$? @
spec$$A E
)$$E F
{%% 	
return&& 
await&& 
ApplySpecification&& +
(&&+ ,
spec&&, 0
)&&0 1
.&&1 2
FirstOrDefaultAsync&&2 E
(&&E F
)&&F G
;&&G H
}'' 	
public)) 
async)) 
Task)) 
<)) 
IReadOnlyList)) '
<))' (
T))( )
>))) *
>))* +
	ListAsync)), 5
())5 6
ISpecification))6 D
<))D E
T))E F
>))F G
spec))H L
)))L M
{** 	
return++ 
await++ 
ApplySpecification++ +
(+++ ,
spec++, 0
)++0 1
.++1 2
ToListAsync++2 =
(++= >
)++> ?
;++? @
}-- 	
private// 

IQueryable// 
<// 
T// 
>// 
ApplySpecification// 0
(//0 1
ISpecification//1 ?
<//? @
T//@ A
>//A B
spec//C G
)//G H
{00 	
return11 "
SpecificationEvaluator11 )
<11) *
T11* +
>11+ ,
.11, -
GetQuery11- 5
(115 6
_context116 >
.11> ?
Set11? B
<11B C
T11C D
>11D E
(11E F
)11F G
.11G H
AsQueryable11H S
(11S T
)11T U
,11U V
spec11W [
)11[ \
;11\ ]
}22 	
public44 
async44 
Task44 
<44 
int44 
>44 

CountAsync44 )
(44) *
ISpecification44* 8
<448 9
T449 :
>44: ;
spec44< @
)44@ A
{55 	
return66 
await66 
ApplySpecification66 +
(66+ ,
spec66, 0
)660 1
.661 2

CountAsync662 <
(66< =
)66= >
;66> ?
}77 	
public99 
void99 
Add99 
(99 
T99 
entity99  
)99  !
{:: 	
_context;; 
.;; 
Set;; 
<;; 
T;; 
>;; 
(;; 
);; 
.;; 
Add;; !
(;;! "
entity;;" (
);;( )
;;;) *
}<< 	
public>> 
void>> 
Update>> 
(>> 
T>> 
entity>> #
)>># $
{?? 	
_context@@ 
.@@ 
Set@@ 
<@@ 
T@@ 
>@@ 
(@@ 
)@@ 
.@@ 
Attach@@ $
(@@$ %
entity@@% +
)@@+ ,
;@@, -
_contextAA 
.AA 
EntryAA 
(AA 
entityAA !
)AA! "
.AA" #
StateAA# (
=AA) *
EntityStateAA+ 6
.AA6 7
ModifiedAA7 ?
;AA? @
}BB 	
publicDD 
voidDD 
DeleteDD 
(DD 
TDD 
entityDD #
)DD# $
{EE 	
_contextFF 
.FF 
SetFF 
<FF 
TFF 
>FF 
(FF 
)FF 
.FF 
RemoveFF $
(FF$ %
entityFF% +
)FF+ ,
;FF, -
}GG 	
}HH 
}II ì
DC:\programozas\udemy\skinet\DAL\Data\Repository\ProductRepository.cs
	namespace		 	
DAL		
 
.		 
Data		 
.		 

Repository		 
{

 
public 

class 
ProductRepository "
:# $
IProductRepository% 7
{ 
private 
readonly 
StoreContext %
_storeContext& 3
;3 4
public 
ProductRepository  
(  !
StoreContext! -
storeContext. :
): ;
{ 	
_storeContext 
= 
storeContext (
;( )
} 	
public 
async 
Task 
< 
IReadOnlyList '
<' (
ProductBrand( 4
>4 5
>5 6!
GetProductBrandsAsync7 L
(L M
)M N
{ 	
return 
await 
_storeContext &
.& '
ProductBrands' 4
.4 5
ToListAsync5 @
(@ A
)A B
;B C
}	 

public 
async 
Task 
< 
Product !
>! "
GetProductByIdAsync# 6
(6 7
int7 :
id; =
)= >
{ 	
return 
await 
_storeContext &
.& '
Products' /
./ 0
Include0 7
(7 8
p8 9
=>9 ;
p; <
.< =
ProductType= H
)H I
.I J
IncludeJ Q
(Q R
pR S
=>S U
pU V
.V W
ProductBrandW c
)c d
.d e
FirstOrDefaultAsynce x
(x y
py z
=>z |
p| }
.} ~
Id	~ Ä
==
Ä Ç
id
Ç Ñ
)
Ñ Ö
;
Ö Ü
} 	
public 
async 
Task 
< 
IReadOnlyList '
<' (
Product( /
>/ 0
>0 1
GetProducts2 =
(= >
)> ?
{ 	
return   
await   
_storeContext   &
.  & '
Products  ' /
.  / 0
Include  0 7
(  7 8
p  8 9
=>  : <
p  = >
.  > ?
ProductType  ? J
)  J K
.  K L
Include  L S
(  S T
p  T U
=>  V X
p  Y Z
.  Z [
ProductBrand  [ g
)  g h
.  h i
ToListAsync  i t
(  t u
)  u v
;  v w
}!! 	
public## 
async## 
Task## 
<## 
IReadOnlyList## '
<##' (
ProductType##( 3
>##3 4
>##4 5 
GetProductTypesAsync##6 J
(##J K
)##K L
{$$ 	
return%% 
await%% 
_storeContext%% &
.%%& '
ProductTypes%%' 3
.%%3 4
ToListAsync%%4 ?
(%%? @
)%%@ A
;%%A B
}&&	 

}'' 
}(( Ë*
>C:\programozas\udemy\skinet\DAL\Data\SpecificationEvaluator.cs
	namespace 	
DAL
 
. 
Specifications 
. 
	Evaluator &
{		 
public

 

static

 
class

 "
SpecificationEvaluator

 .
<

. /
TEntity

/ 6
>

6 7
where

8 =
TEntity

> E
:

F G

BaseEntity

H R
{ 
public 
static 
bool 
Test 
(  
IEnumerable  +
<+ ,
TEntity, 3
>3 4
	inputList5 >
,> ?
ISpecification@ N
<N O
TEntityO V
>V W
specX \
)\ ]
{ 	
IEnumerable 
< 
TEntity 
>  
inputListMutated! 1
=2 3
	inputList4 =
.= >
ToList> D
(D E
)E F
;F G
if 
( 
spec 
. 
Criteria 
!= !
null" &
)& '
{ 
inputListMutated  
=! "
inputListMutated# 3
.3 4
Where4 9
(9 :
spec: >
.> ?
Criteria? G
.G H
CompileH O
(O P
)P Q
)Q R
;R S
} 
if 
( 
spec 
. 
OrderBy 
!= 
null  $
)$ %
{ 
inputListMutated  
=! "
inputListMutated# 3
.3 4
OrderBy4 ;
(; <
spec< @
.@ A
OrderByA H
.H I
CompileI P
(P Q
)Q R
)R S
;S T
} 
if 
( 
spec 
. 
OrderByDescending &
!=' )
null* .
). /
{ 
inputListMutated  
=! "
inputListMutated# 3
.3 4
OrderByDescending4 E
(E F
specF J
.J K
OrderByK R
.R S
CompileS Z
(Z [
)[ \
)\ ]
;] ^
} 
if 
( 
spec 
. 
IsPagingEnabled $
)$ %
{ 
inputListMutated  
=! "
inputListMutated# 3
.3 4
Skip4 8
(8 9
spec9 =
.= >
Skip> B
)B C
.C D
TakeD H
(H I
specI M
.M N
TakeN R
)R S
;S T
} 
return 
inputListMutated #
.# $
SequenceEqual$ 1
(1 2
	inputList2 ;
); <
;< =
}   	
public!! 
static!! 

IQueryable!!  
<!!  !
TEntity!!! (
>!!( )
GetQuery!!* 2
(!!2 3

IQueryable!!3 =
<!!= >
TEntity!!> E
>!!E F

inputQuery!!G Q
,!!Q R
ISpecification!!R `
<!!` a
TEntity!!a h
>!!h i
spec!!j n
)!!n o
{"" 	
var## 
query## 
=## 

inputQuery## "
;##" #
if$$ 
($$ 
spec$$ 
.$$ 
Criteria$$ 
!=$$ 
null$$  $
)$$$ %
{%% 
query&& 
=&& 
query&& 
.&& 
Where&& #
(&&# $
spec&&$ (
.&&( )
Criteria&&) 1
)&&1 2
;&&2 3
}'' 
query(( 
=(( 
spec(( 
.(( 
Includes(( !
.((! "
	Aggregate((" +
(((+ ,
query((, 1
,((1 2
(((3 4
current((4 ;
,((; <
include((= D
)((D E
=>((F H
current((I P
.((P Q
Include((Q X
(((X Y
include((Y `
)((` a
)((a b
;((b c
if)) 
()) 
spec)) 
.)) 
OrderBy)) 
!=)) 
null)) #
)))# $
{** 
query++ 
=++ 
query++ 
.++ 
OrderBy++ %
(++% &
spec++& *
.++* +
OrderBy+++ 2
)++2 3
;++3 4
},, 
if-- 
(-- 
spec-- 
.-- 
OrderByDescending-- &
!=--' )
null--* .
)--. /
{.. 
query// 
=// 
query// 
.// 
OrderByDescending// /
(/// 0
spec//0 4
.//4 5
OrderByDescending//5 F
)//F G
;//G H
}00 
if33 
(33 
spec33 
.33 
IsPagingEnabled33 $
)33$ %
{44 
query55 
=55 
query55 
.55 
Skip55 "
(55" #
spec55# '
.55' (
Skip55( ,
)55, -
.55- .
Take55. 2
(552 3
spec553 7
.557 8
Take558 <
)55< =
;55= >
}66 
return77 
query77 
;77 
}88 	
}99 
}:: ú1
4C:\programozas\udemy\skinet\DAL\Data\StoreContext.cs
	namespace 	
DAL
 
{ 
public 

class 
StoreContext 
: 
	DbContext  )
{ 
private 
readonly 
ISeedService %
_seedService& 2
;2 3
public 
StoreContext 
( 
DbContextOptions ,
<, -
StoreContext- 9
>9 :
options; B
,B C
ISeedServiceD P
seedServiceQ \
)\ ]
:^ _
base` d
(d e
optionse l
)l m
{ 	
_seedService 
= 
seedService &
;& '
} 	
public 
DbSet 
< 
Product 
> 
Products &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
ProductBrand !
>! "
ProductBrands# 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
public 
DbSet 
< 
ProductType  
>  !
ProductTypes" .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
DbSet 
< 
Order 
> 
Orders "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DbSet 
< 
	OrderItem 
> 

OrderItems  *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 
DbSet 
< 
DeliveryMethod #
># $
DeliveryMethod% 3
{3 4
get5 8
;8 9
set: =
;= >
}? @
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
base 
. 
OnModelCreating  
(  !
modelBuilder! -
)- .
;. /
modelBuilder 
. 
ApplyConfiguration +
(+ ,
new, /&
ProductEntityConfiguration0 J
(J K
_seedServiceK W
)W X
)X Y
;Y Z
modelBuilder   
.   
ApplyConfiguration   +
(  + ,
new  , /*
ProductTypeEntityConfiguration  0 N
(  N O
_seedService  O [
)  [ \
)  \ ]
;  ] ^
modelBuilder!! 
.!! 
ApplyConfiguration!! +
(!!+ ,
new!!, /+
ProductBrandEntityConfiguration!!0 O
(!!O P
_seedService!!P \
)!!\ ]
)!!] ^
;!!^ _
modelBuilder"" 
."" 
ApplyConfiguration"" +
(""+ ,
new"", /-
!DeliveryMethodEntityConfiguration""0 Q
(""Q R
_seedService""R ^
)""^ _
)""_ `
;""` a
modelBuilder## 
.## +
ApplyConfigurationsFromAssembly## 8
(##8 9
Assembly##9 A
.##A B 
GetExecutingAssembly##B V
(##V W
)##W X
)##X Y
;##Y Z
if%% 
(%% 
Database%% 
.%% 
ProviderName%% %
==%%& (
$str%%) O
)%%O P
{&& 
foreach'' 
('' 
var'' 

entityType'' '
in''( *
modelBuilder''+ 7
.''7 8
Model''8 =
.''= >
GetEntityTypes''> L
(''L M
)''M N
)''N O
{(( 
var)) 

properties)) "
=))# $

entityType))% /
.))/ 0
ClrType))0 7
.))7 8
GetProperties))8 E
())E F
)))F G
.))G H
Where))H M
())M N
p))N O
=>))P R
p))S T
.))T U
PropertyType))U a
==))b d
typeof))e k
())k l
decimal))l s
)))s t
)))t u
;))u v
var** 
datetimeProperties** *
=**+ ,

entityType**- 7
.**7 8
ClrType**8 ?
.**? @
GetProperties**@ M
(**M N
)**N O
.**O P
Where**P U
(**U V
p**V W
=>**X Z
p**[ \
.**\ ]
PropertyType**] i
==**j l
typeof**m s
(**s t
DateTimeOffset	**t Ç
)
**Ç É
)
**É Ñ
;
**Ñ Ö
foreach++ 
(++ 
var++  
property++! )
in++* ,

properties++- 7
)++7 8
{,, 
modelBuilder-- $
.--$ %
Entity--% +
(--+ ,

entityType--, 6
.--6 7
Name--7 ;
)--; <
.--< =
Property--= E
(--E F
property--F N
.--N O
Name--O S
)--S T
.--T U
HasConversion--U b
<--b c
double--c i
>--i j
(--j k
)--k l
;--l m
}.. 
foreach// 
(// 
var//  
property//! )
in//* ,
datetimeProperties//- ?
)//? @
{00 
modelBuilder11 $
.11$ %
Entity11% +
(11+ ,

entityType11, 6
.116 7
Name117 ;
)11; <
.11< =
Property11= E
(11E F
property11F N
.11N O
Name11O S
)11S T
.11T U
HasConversion11U b
(11b c
new11c f
	Microsoft11g p
.11p q 
EntityFrameworkCore	11q Ñ
.
11Ñ Ö
Storage
11Ö å
.
11å ç
ValueConversion
11ç ú
.
11ú ù-
DateTimeOffsetToBinaryConverter
11ù º
(
11º Ω
)
11Ω æ
)
11æ ø
;
11ø ¿
}22 
}33 
}44 
}55 	
}66 
}77 ®
2C:\programozas\udemy\skinet\DAL\Data\UnitOfWork.cs
	namespace

 	
DAL


 
.

 
Data

 
{ 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
private 
readonly 
StoreContext %
_context& .
;. /
private 

Dictionary 
< 
Type 
,  
object! '
>' (
_repositories) 6
=7 8
new9 <

Dictionary= G
<G H
TypeH L
,L M
objectM S
>S T
(T U
)U V
;V W
public 

UnitOfWork 
( 
StoreContext &
context' .
). /
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
int 
> 
Complete '
(' (
)( )
{ 	
return 
await 
_context !
.! "
SaveChangesAsync" 2
(2 3
)3 4
;4 5
} 	
public 
void 
Dispose 
( 
) 
{ 	
_context 
. 
Dispose 
( 
) 
; 
} 	
public 
IGenericRepository !
<! "
T" #
># $

Repository% /
</ 0
T0 1
>1 2
(2 3
)3 4
where5 :
T; <
:= >

BaseEntity? I
{ 	
if!! 
(!! 
_repositories!! 
.!! 
ContainsKey!! )
(!!) *
typeof!!* 0
(!!0 1
T!!1 2
)!!2 3
)!!3 4
==!!5 7
true!!8 <
)!!< =
{"" 
return## 
_repositories## $
[##$ %
typeof##% +
(##+ ,
T##, -
)##- .
]##. /
as##0 2
IGenericRepository##3 E
<##E F
T##F G
>##G H
;##H I
}$$ 
IGenericRepository%% 
<%% 
T%%  
>%%  !
repo%%" &
=%%' (
new%%) ,
GenericRepository%%- >
<%%> ?
T%%? @
>%%@ A
(%%A B
_context%%B J
)%%J K
;%%K L
_repositories&& 
.&& 
Add&& 
(&& 
typeof&& $
(&&$ %
T&&% &
)&&& '
,&&' (
repo&&) -
)&&- .
;&&. /
return'' 
repo'' 
;'' 
}(( 	
}55 
}66 Ô
@C:\programozas\udemy\skinet\DAL\Identity\AppIdentityDbContext.cs
	namespace 	
DAL
 
. 
Identity 
{		 
public

 

class

  
AppIdentityDbContext

 %
:

& '
IdentityDbContext

( 9
<

9 :
AppUser

: A
>

A B
{ 
public  
AppIdentityDbContext #
(# $
DbContextOptions$ 4
<4 5 
AppIdentityDbContext5 I
>I J
optionsK R
)R S
:T U
baseV Z
(Z [
options[ b
)b c
{ 	
} 	
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
builder= D
)D E
{ 	
base 
. 
OnModelCreating  
(  !
builder! (
)( )
;) *
} 	
} 
} ¨‘
UC:\programozas\udemy\skinet\DAL\Identity\Migrations\20200930163651_IdentityInitial.cs
	namespace 	
DAL
 
. 
Identity 
. 

Migrations !
{ 
public 

partial 
class 
IdentityInitial (
:) *
	Migration+ 4
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
CreateTable

 (
(

( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
	maxLength0 9
:9 :
$num; >
,> ?
nullable@ H
:H I
trueJ N
)N O
,O P
NormalizedName "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
	maxLength: C
:C D
$numE H
,H I
nullableJ R
:R S
trueT X
)X Y
,Y Z
ConcurrencyStamp $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
nullable< D
:D E
trueF J
)J K
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
nullable. 6
:6 7
false8 =
)= >
,> ?
UserName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
	maxLength4 =
:= >
$num? B
,B C
nullableD L
:L M
trueN R
)R S
,S T
NormalizedUserName &
=' (
table) .
.. /
Column/ 5
<5 6
string6 <
>< =
(= >
	maxLength> G
:G H
$numI L
,L M
nullableN V
:V W
trueX \
)\ ]
,] ^
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
	maxLength1 :
:: ;
$num< ?
,? @
nullableA I
:I J
trueK O
)O P
,P Q
NormalizedEmail   #
=  $ %
table  & +
.  + ,
Column  , 2
<  2 3
string  3 9
>  9 :
(  : ;
	maxLength  ; D
:  D E
$num  F I
,  I J
nullable  K S
:  S T
true  U Y
)  Y Z
,  Z [
EmailConfirmed!! "
=!!# $
table!!% *
.!!* +
Column!!+ 1
<!!1 2
bool!!2 6
>!!6 7
(!!7 8
nullable!!8 @
:!!@ A
false!!B G
)!!G H
,!!H I
PasswordHash""  
=""! "
table""# (
.""( )
Column"") /
<""/ 0
string""0 6
>""6 7
(""7 8
nullable""8 @
:""@ A
true""B F
)""F G
,""G H
SecurityStamp## !
=##" #
table##$ )
.##) *
Column##* 0
<##0 1
string##1 7
>##7 8
(##8 9
nullable##9 A
:##A B
true##C G
)##G H
,##H I
ConcurrencyStamp$$ $
=$$% &
table$$' ,
.$$, -
Column$$- 3
<$$3 4
string$$4 :
>$$: ;
($$; <
nullable$$< D
:$$D E
true$$F J
)$$J K
,$$K L
PhoneNumber%% 
=%%  !
table%%" '
.%%' (
Column%%( .
<%%. /
string%%/ 5
>%%5 6
(%%6 7
nullable%%7 ?
:%%? @
true%%A E
)%%E F
,%%F G 
PhoneNumberConfirmed&& (
=&&) *
table&&+ 0
.&&0 1
Column&&1 7
<&&7 8
bool&&8 <
>&&< =
(&&= >
nullable&&> F
:&&F G
false&&H M
)&&M N
,&&N O
TwoFactorEnabled'' $
=''% &
table''' ,
.'', -
Column''- 3
<''3 4
bool''4 8
>''8 9
(''9 :
nullable'': B
:''B C
false''D I
)''I J
,''J K

LockoutEnd(( 
=((  
table((! &
.((& '
Column((' -
<((- .
DateTimeOffset((. <
>((< =
(((= >
nullable((> F
:((F G
true((H L
)((L M
,((M N
LockoutEnabled)) "
=))# $
table))% *
.))* +
Column))+ 1
<))1 2
bool))2 6
>))6 7
())7 8
nullable))8 @
:))@ A
false))B G
)))G H
,))H I
AccessFailedCount** %
=**& '
table**( -
.**- .
Column**. 4
<**4 5
int**5 8
>**8 9
(**9 :
nullable**: B
:**B C
false**D I
)**I J
,**J K
DisplayName++ 
=++  !
table++" '
.++' (
Column++( .
<++. /
string++/ 5
>++5 6
(++6 7
nullable++7 ?
:++? @
true++A E
)++E F
},, 
,,, 
constraints-- 
:-- 
table-- "
=>--# %
{.. 
table// 
.// 

PrimaryKey// $
(//$ %
$str//% 5
,//5 6
x//7 8
=>//9 ;
x//< =
.//= >
Id//> @
)//@ A
;//A B
}00 
)00 
;00 
migrationBuilder22 
.22 
CreateTable22 (
(22( )
name33 
:33 
$str33 (
,33( )
columns44 
:44 
table44 
=>44 !
new44" %
{55 
Id66 
=66 
table66 
.66 
Column66 %
<66% &
int66& )
>66) *
(66* +
nullable66+ 3
:663 4
false665 :
)66: ;
.77 

Annotation77 #
(77# $
$str77$ 8
,778 9
$str77: @
)77@ A
,77A B
RoleId88 
=88 
table88 "
.88" #
Column88# )
<88) *
string88* 0
>880 1
(881 2
nullable882 :
:88: ;
false88< A
)88A B
,88B C
	ClaimType99 
=99 
table99  %
.99% &
Column99& ,
<99, -
string99- 3
>993 4
(994 5
nullable995 =
:99= >
true99? C
)99C D
,99D E

ClaimValue:: 
=::  
table::! &
.::& '
Column::' -
<::- .
string::. 4
>::4 5
(::5 6
nullable::6 >
:::> ?
true::@ D
)::D E
};; 
,;; 
constraints<< 
:<< 
table<< "
=><<# %
{== 
table>> 
.>> 

PrimaryKey>> $
(>>$ %
$str>>% :
,>>: ;
x>>< =
=>>>> @
x>>A B
.>>B C
Id>>C E
)>>E F
;>>F G
table?? 
.?? 

ForeignKey?? $
(??$ %
name@@ 
:@@ 
$str@@ F
,@@F G
columnAA 
:AA 
xAA  !
=>AA" $
xAA% &
.AA& '
RoleIdAA' -
,AA- .
principalTableBB &
:BB& '
$strBB( 5
,BB5 6
principalColumnCC '
:CC' (
$strCC) -
,CC- .
onDeleteDD  
:DD  !
ReferentialActionDD" 3
.DD3 4
CascadeDD4 ;
)DD; <
;DD< =
}EE 
)EE 
;EE 
migrationBuilderGG 
.GG 
CreateTableGG (
(GG( )
nameHH 
:HH 
$strHH 
,HH  
columnsII 
:II 
tableII 
=>II !
newII" %
{JJ 
IdKK 
=KK 
tableKK 
.KK 
ColumnKK %
<KK% &
intKK& )
>KK) *
(KK* +
nullableKK+ 3
:KK3 4
falseKK5 :
)KK: ;
.LL 

AnnotationLL #
(LL# $
$strLL$ 8
,LL8 9
$strLL: @
)LL@ A
,LLA B
	FirstNameMM 
=MM 
tableMM  %
.MM% &
ColumnMM& ,
<MM, -
stringMM- 3
>MM3 4
(MM4 5
nullableMM5 =
:MM= >
trueMM? C
)MMC D
,MMD E
LastNameNN 
=NN 
tableNN $
.NN$ %
ColumnNN% +
<NN+ ,
stringNN, 2
>NN2 3
(NN3 4
nullableNN4 <
:NN< =
trueNN> B
)NNB C
,NNC D
StreetOO 
=OO 
tableOO "
.OO" #
ColumnOO# )
<OO) *
stringOO* 0
>OO0 1
(OO1 2
nullableOO2 :
:OO: ;
trueOO< @
)OO@ A
,OOA B
CityPP 
=PP 
tablePP  
.PP  !
ColumnPP! '
<PP' (
stringPP( .
>PP. /
(PP/ 0
nullablePP0 8
:PP8 9
truePP: >
)PP> ?
,PP? @
StateQQ 
=QQ 
tableQQ !
.QQ! "
ColumnQQ" (
<QQ( )
stringQQ) /
>QQ/ 0
(QQ0 1
nullableQQ1 9
:QQ9 :
trueQQ; ?
)QQ? @
,QQ@ A
ZipcodeRR 
=RR 
tableRR #
.RR# $
ColumnRR$ *
<RR* +
stringRR+ 1
>RR1 2
(RR2 3
nullableRR3 ;
:RR; <
trueRR= A
)RRA B
,RRB C
	AppUserIdSS 
=SS 
tableSS  %
.SS% &
ColumnSS& ,
<SS, -
stringSS- 3
>SS3 4
(SS4 5
nullableSS5 =
:SS= >
falseSS? D
)SSD E
}TT 
,TT 
constraintsUU 
:UU 
tableUU "
=>UU# %
{VV 
tableWW 
.WW 

PrimaryKeyWW $
(WW$ %
$strWW% 1
,WW1 2
xWW3 4
=>WW5 7
xWW8 9
.WW9 :
IdWW: <
)WW< =
;WW= >
tableXX 
.XX 

ForeignKeyXX $
(XX$ %
nameYY 
:YY 
$strYY @
,YY@ A
columnZZ 
:ZZ 
xZZ  !
=>ZZ" $
xZZ% &
.ZZ& '
	AppUserIdZZ' 0
,ZZ0 1
principalTable[[ &
:[[& '
$str[[( 5
,[[5 6
principalColumn\\ '
:\\' (
$str\\) -
,\\- .
onDelete]]  
:]]  !
ReferentialAction]]" 3
.]]3 4
Cascade]]4 ;
)]]; <
;]]< =
}^^ 
)^^ 
;^^ 
migrationBuilder`` 
.`` 
CreateTable`` (
(``( )
nameaa 
:aa 
$straa (
,aa( )
columnsbb 
:bb 
tablebb 
=>bb !
newbb" %
{cc 
Iddd 
=dd 
tabledd 
.dd 
Columndd %
<dd% &
intdd& )
>dd) *
(dd* +
nullabledd+ 3
:dd3 4
falsedd5 :
)dd: ;
.ee 

Annotationee #
(ee# $
$stree$ 8
,ee8 9
$stree: @
)ee@ A
,eeA B
UserIdff 
=ff 
tableff "
.ff" #
Columnff# )
<ff) *
stringff* 0
>ff0 1
(ff1 2
nullableff2 :
:ff: ;
falseff< A
)ffA B
,ffB C
	ClaimTypegg 
=gg 
tablegg  %
.gg% &
Columngg& ,
<gg, -
stringgg- 3
>gg3 4
(gg4 5
nullablegg5 =
:gg= >
truegg? C
)ggC D
,ggD E

ClaimValuehh 
=hh  
tablehh! &
.hh& '
Columnhh' -
<hh- .
stringhh. 4
>hh4 5
(hh5 6
nullablehh6 >
:hh> ?
truehh@ D
)hhD E
}ii 
,ii 
constraintsjj 
:jj 
tablejj "
=>jj# %
{kk 
tablell 
.ll 

PrimaryKeyll $
(ll$ %
$strll% :
,ll: ;
xll< =
=>ll> @
xllA B
.llB C
IdllC E
)llE F
;llF G
tablemm 
.mm 

ForeignKeymm $
(mm$ %
namenn 
:nn 
$strnn F
,nnF G
columnoo 
:oo 
xoo  !
=>oo" $
xoo% &
.oo& '
UserIdoo' -
,oo- .
principalTablepp &
:pp& '
$strpp( 5
,pp5 6
principalColumnqq '
:qq' (
$strqq) -
,qq- .
onDeleterr  
:rr  !
ReferentialActionrr" 3
.rr3 4
Cascaderr4 ;
)rr; <
;rr< =
}ss 
)ss 
;ss 
migrationBuilderuu 
.uu 
CreateTableuu (
(uu( )
namevv 
:vv 
$strvv (
,vv( )
columnsww 
:ww 
tableww 
=>ww !
newww" %
{xx 
LoginProvideryy !
=yy" #
tableyy$ )
.yy) *
Columnyy* 0
<yy0 1
stringyy1 7
>yy7 8
(yy8 9
nullableyy9 A
:yyA B
falseyyC H
)yyH I
,yyI J
ProviderKeyzz 
=zz  !
tablezz" '
.zz' (
Columnzz( .
<zz. /
stringzz/ 5
>zz5 6
(zz6 7
nullablezz7 ?
:zz? @
falsezzA F
)zzF G
,zzG H
ProviderDisplayName{{ '
={{( )
table{{* /
.{{/ 0
Column{{0 6
<{{6 7
string{{7 =
>{{= >
({{> ?
nullable{{? G
:{{G H
true{{I M
){{M N
,{{N O
UserId|| 
=|| 
table|| "
.||" #
Column||# )
<||) *
string||* 0
>||0 1
(||1 2
nullable||2 :
:||: ;
false||< A
)||A B
}}} 
,}} 
constraints~~ 
:~~ 
table~~ "
=>~~# %
{ 
table
ÄÄ 
.
ÄÄ 

PrimaryKey
ÄÄ $
(
ÄÄ$ %
$str
ÄÄ% :
,
ÄÄ: ;
x
ÄÄ< =
=>
ÄÄ> @
new
ÄÄA D
{
ÄÄE F
x
ÄÄG H
.
ÄÄH I
LoginProvider
ÄÄI V
,
ÄÄV W
x
ÄÄX Y
.
ÄÄY Z
ProviderKey
ÄÄZ e
}
ÄÄf g
)
ÄÄg h
;
ÄÄh i
table
ÅÅ 
.
ÅÅ 

ForeignKey
ÅÅ $
(
ÅÅ$ %
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ F
,
ÇÇF G
column
ÉÉ 
:
ÉÉ 
x
ÉÉ  !
=>
ÉÉ" $
x
ÉÉ% &
.
ÉÉ& '
UserId
ÉÉ' -
,
ÉÉ- .
principalTable
ÑÑ &
:
ÑÑ& '
$str
ÑÑ( 5
,
ÑÑ5 6
principalColumn
ÖÖ '
:
ÖÖ' (
$str
ÖÖ) -
,
ÖÖ- .
onDelete
ÜÜ  
:
ÜÜ  !
ReferentialAction
ÜÜ" 3
.
ÜÜ3 4
Cascade
ÜÜ4 ;
)
ÜÜ; <
;
ÜÜ< =
}
áá 
)
áá 
;
áá 
migrationBuilder
ââ 
.
ââ 
CreateTable
ââ (
(
ââ( )
name
ää 
:
ää 
$str
ää '
,
ää' (
columns
ãã 
:
ãã 
table
ãã 
=>
ãã !
new
ãã" %
{
åå 
UserId
çç 
=
çç 
table
çç "
.
çç" #
Column
çç# )
<
çç) *
string
çç* 0
>
çç0 1
(
çç1 2
nullable
çç2 :
:
çç: ;
false
çç< A
)
ççA B
,
ççB C
RoleId
éé 
=
éé 
table
éé "
.
éé" #
Column
éé# )
<
éé) *
string
éé* 0
>
éé0 1
(
éé1 2
nullable
éé2 :
:
éé: ;
false
éé< A
)
ééA B
}
èè 
,
èè 
constraints
êê 
:
êê 
table
êê "
=>
êê# %
{
ëë 
table
íí 
.
íí 

PrimaryKey
íí $
(
íí$ %
$str
íí% 9
,
íí9 :
x
íí; <
=>
íí= ?
new
íí@ C
{
ííD E
x
ííF G
.
ííG H
UserId
ííH N
,
ííN O
x
ííP Q
.
ííQ R
RoleId
ííR X
}
ííY Z
)
ííZ [
;
íí[ \
table
ìì 
.
ìì 

ForeignKey
ìì $
(
ìì$ %
name
îî 
:
îî 
$str
îî E
,
îîE F
column
ïï 
:
ïï 
x
ïï  !
=>
ïï" $
x
ïï% &
.
ïï& '
RoleId
ïï' -
,
ïï- .
principalTable
ññ &
:
ññ& '
$str
ññ( 5
,
ññ5 6
principalColumn
óó '
:
óó' (
$str
óó) -
,
óó- .
onDelete
òò  
:
òò  !
ReferentialAction
òò" 3
.
òò3 4
Cascade
òò4 ;
)
òò; <
;
òò< =
table
ôô 
.
ôô 

ForeignKey
ôô $
(
ôô$ %
name
öö 
:
öö 
$str
öö E
,
ööE F
column
õõ 
:
õõ 
x
õõ  !
=>
õõ" $
x
õõ% &
.
õõ& '
UserId
õõ' -
,
õõ- .
principalTable
úú &
:
úú& '
$str
úú( 5
,
úú5 6
principalColumn
ùù '
:
ùù' (
$str
ùù) -
,
ùù- .
onDelete
ûû  
:
ûû  !
ReferentialAction
ûû" 3
.
ûû3 4
Cascade
ûû4 ;
)
ûû; <
;
ûû< =
}
üü 
)
üü 
;
üü 
migrationBuilder
°° 
.
°° 
CreateTable
°° (
(
°°( )
name
¢¢ 
:
¢¢ 
$str
¢¢ (
,
¢¢( )
columns
££ 
:
££ 
table
££ 
=>
££ !
new
££" %
{
§§ 
UserId
•• 
=
•• 
table
•• "
.
••" #
Column
••# )
<
••) *
string
••* 0
>
••0 1
(
••1 2
nullable
••2 :
:
••: ;
false
••< A
)
••A B
,
••B C
LoginProvider
¶¶ !
=
¶¶" #
table
¶¶$ )
.
¶¶) *
Column
¶¶* 0
<
¶¶0 1
string
¶¶1 7
>
¶¶7 8
(
¶¶8 9
nullable
¶¶9 A
:
¶¶A B
false
¶¶C H
)
¶¶H I
,
¶¶I J
Name
ßß 
=
ßß 
table
ßß  
.
ßß  !
Column
ßß! '
<
ßß' (
string
ßß( .
>
ßß. /
(
ßß/ 0
nullable
ßß0 8
:
ßß8 9
false
ßß: ?
)
ßß? @
,
ßß@ A
Value
®® 
=
®® 
table
®® !
.
®®! "
Column
®®" (
<
®®( )
string
®®) /
>
®®/ 0
(
®®0 1
nullable
®®1 9
:
®®9 :
true
®®; ?
)
®®? @
}
©© 
,
©© 
constraints
™™ 
:
™™ 
table
™™ "
=>
™™# %
{
´´ 
table
¨¨ 
.
¨¨ 

PrimaryKey
¨¨ $
(
¨¨$ %
$str
¨¨% :
,
¨¨: ;
x
¨¨< =
=>
¨¨> @
new
¨¨A D
{
¨¨E F
x
¨¨G H
.
¨¨H I
UserId
¨¨I O
,
¨¨O P
x
¨¨Q R
.
¨¨R S
LoginProvider
¨¨S `
,
¨¨` a
x
¨¨b c
.
¨¨c d
Name
¨¨d h
}
¨¨i j
)
¨¨j k
;
¨¨k l
table
≠≠ 
.
≠≠ 

ForeignKey
≠≠ $
(
≠≠$ %
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ F
,
ÆÆF G
column
ØØ 
:
ØØ 
x
ØØ  !
=>
ØØ" $
x
ØØ% &
.
ØØ& '
UserId
ØØ' -
,
ØØ- .
principalTable
∞∞ &
:
∞∞& '
$str
∞∞( 5
,
∞∞5 6
principalColumn
±± '
:
±±' (
$str
±±) -
,
±±- .
onDelete
≤≤  
:
≤≤  !
ReferentialAction
≤≤" 3
.
≤≤3 4
Cascade
≤≤4 ;
)
≤≤; <
;
≤≤< =
}
≥≥ 
)
≥≥ 
;
≥≥ 
migrationBuilder
µµ 
.
µµ 
CreateIndex
µµ (
(
µµ( )
name
∂∂ 
:
∂∂ 
$str
∂∂ ,
,
∂∂, -
table
∑∑ 
:
∑∑ 
$str
∑∑  
,
∑∑  !
column
∏∏ 
:
∏∏ 
$str
∏∏ #
,
∏∏# $
unique
ππ 
:
ππ 
true
ππ 
)
ππ 
;
ππ 
migrationBuilder
ªª 
.
ªª 
CreateIndex
ªª (
(
ªª( )
name
ºº 
:
ºº 
$str
ºº 2
,
ºº2 3
table
ΩΩ 
:
ΩΩ 
$str
ΩΩ )
,
ΩΩ) *
column
ææ 
:
ææ 
$str
ææ  
)
ææ  !
;
ææ! "
migrationBuilder
¿¿ 
.
¿¿ 
CreateIndex
¿¿ (
(
¿¿( )
name
¡¡ 
:
¡¡ 
$str
¡¡ %
,
¡¡% &
table
¬¬ 
:
¬¬ 
$str
¬¬ $
,
¬¬$ %
column
√√ 
:
√√ 
$str
√√ (
,
√√( )
unique
ƒƒ 
:
ƒƒ 
true
ƒƒ 
,
ƒƒ 
filter
≈≈ 
:
≈≈ 
$str
≈≈ 6
)
≈≈6 7
;
≈≈7 8
migrationBuilder
«« 
.
«« 
CreateIndex
«« (
(
««( )
name
»» 
:
»» 
$str
»» 2
,
»»2 3
table
…… 
:
…… 
$str
…… )
,
……) *
column
   
:
   
$str
    
)
    !
;
  ! "
migrationBuilder
ÃÃ 
.
ÃÃ 
CreateIndex
ÃÃ (
(
ÃÃ( )
name
ÕÕ 
:
ÕÕ 
$str
ÕÕ 2
,
ÕÕ2 3
table
ŒŒ 
:
ŒŒ 
$str
ŒŒ )
,
ŒŒ) *
column
œœ 
:
œœ 
$str
œœ  
)
œœ  !
;
œœ! "
migrationBuilder
—— 
.
—— 
CreateIndex
—— (
(
——( )
name
““ 
:
““ 
$str
““ 1
,
““1 2
table
”” 
:
”” 
$str
”” (
,
””( )
column
‘‘ 
:
‘‘ 
$str
‘‘  
)
‘‘  !
;
‘‘! "
migrationBuilder
÷÷ 
.
÷÷ 
CreateIndex
÷÷ (
(
÷÷( )
name
◊◊ 
:
◊◊ 
$str
◊◊ "
,
◊◊" #
table
ÿÿ 
:
ÿÿ 
$str
ÿÿ $
,
ÿÿ$ %
column
ŸŸ 
:
ŸŸ 
$str
ŸŸ )
)
ŸŸ) *
;
ŸŸ* +
migrationBuilder
€€ 
.
€€ 
CreateIndex
€€ (
(
€€( )
name
‹‹ 
:
‹‹ 
$str
‹‹ %
,
‹‹% &
table
›› 
:
›› 
$str
›› $
,
››$ %
column
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ ,
,
ﬁﬁ, -
unique
ﬂﬂ 
:
ﬂﬂ 
true
ﬂﬂ 
,
ﬂﬂ 
filter
‡‡ 
:
‡‡ 
$str
‡‡ :
)
‡‡: ;
;
‡‡; <
}
·· 	
	protected
„„ 
override
„„ 
void
„„ 
Down
„„  $
(
„„$ %
MigrationBuilder
„„% 5
migrationBuilder
„„6 F
)
„„F G
{
‰‰ 	
migrationBuilder
ÂÂ 
.
ÂÂ 
	DropTable
ÂÂ &
(
ÂÂ& '
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ 
)
ÊÊ  
;
ÊÊ  !
migrationBuilder
ËË 
.
ËË 
	DropTable
ËË &
(
ËË& '
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ (
)
ÈÈ( )
;
ÈÈ) *
migrationBuilder
ÎÎ 
.
ÎÎ 
	DropTable
ÎÎ &
(
ÎÎ& '
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ (
)
ÏÏ( )
;
ÏÏ) *
migrationBuilder
ÓÓ 
.
ÓÓ 
	DropTable
ÓÓ &
(
ÓÓ& '
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ (
)
ÔÔ( )
;
ÔÔ) *
migrationBuilder
ÒÒ 
.
ÒÒ 
	DropTable
ÒÒ &
(
ÒÒ& '
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ '
)
ÚÚ' (
;
ÚÚ( )
migrationBuilder
ÙÙ 
.
ÙÙ 
	DropTable
ÙÙ &
(
ÙÙ& '
name
ıı 
:
ıı 
$str
ıı (
)
ıı( )
;
ıı) *
migrationBuilder
˜˜ 
.
˜˜ 
	DropTable
˜˜ &
(
˜˜& '
name
¯¯ 
:
¯¯ 
$str
¯¯ #
)
¯¯# $
;
¯¯$ %
migrationBuilder
˙˙ 
.
˙˙ 
	DropTable
˙˙ &
(
˙˙& '
name
˚˚ 
:
˚˚ 
$str
˚˚ #
)
˚˚# $
;
˚˚$ %
}
¸¸ 	
}
˝˝ 
}˛˛ é
KC:\programozas\udemy\skinet\DAL\Identity\SeedService\IdentitySeedService.cs
	namespace 	
DAL
 
. 
Identity 
{ 
public		 

class		 
IdentitySeedService		 $
:		% & 
IIdentitySeedService		' ;
{

 
private 
readonly 
UserManager $
<$ %
AppUser% ,
>, -
_userManager. :
;: ;
public 
IdentitySeedService "
(" #
UserManager# .
<. /
AppUser/ 6
>6 7
userManager8 C
)C D
{ 	
_userManager 
= 
userManager &
;& '
} 	
public 
async 
Task 
SeedUsersAsync (
(( )
)) *
{ 	
if 
( 
! 
await 
_userManager #
.# $
Users$ )
.) *
AnyAsync* 2
(2 3
)3 4
)4 5
{ 
var 
user 
= 
new 
AppUser &
{ 
DisplayName 
=  !
$str" '
,' (
Email 
= 
$str *
,* +
UserName 
= 
$str -
,- .
Address 
= 
new !
Address" )
{ 
	FirstName !
=" #
$str$ )
,) *
LastName  
=! "
$str# ,
,, -
State 
= 
$str  $
,$ %
Street 
=  
$str! 0
,0 1
City   
=   
$str   )
,  ) *
Zipcode!! 
=!!  !
$str!!" )
}## 
}$$ 
;$$ 
await%% 
_userManager%% "
.%%" #
CreateAsync%%# .
(%%. /
user%%/ 3
,%%3 4
$str%%5 A
)%%A B
;%%B C
}&& 
}'' 	
})) 
}** ˘
LC:\programozas\udemy\skinet\DAL\Identity\SeedService\IIdentitySeedService.cs
	namespace 	
DAL
 
. 
Identity 
{ 
public 

	interface  
IIdentitySeedService )
{ 
Task		 
SeedUsersAsync		 
(		 
)		 
;		 
}

 
} ì{
HC:\programozas\udemy\skinet\DAL\Migrations\20200919145402_initialseed.cs
	namespace 	
DAL
 
. 

Migrations 
{ 
public 

partial 
class 
initialseed $
:% &
	Migration' 0
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
CreateTable		 (
(		( )
name

 
:

 
$str

 %
,

% &
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
nullable+ 3
:3 4
false5 :
): ;
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
nullable0 8
:8 9
true: >
)> ?
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 7
,7 8
x9 :
=>; =
x> ?
.? @
Id@ B
)B C
;C D
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str $
,$ %
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
nullable+ 3
:3 4
false5 :
): ;
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
nullable0 8
:8 9
true: >
)> ?
} 
, 
constraints 
: 
table "
=># %
{ 
table   
.   

PrimaryKey   $
(  $ %
$str  % 6
,  6 7
x  8 9
=>  : <
x  = >
.  > ?
Id  ? A
)  A B
;  B C
}!! 
)!! 
;!! 
migrationBuilder## 
.## 
CreateTable## (
(##( )
name$$ 
:$$ 
$str$$  
,$$  !
columns%% 
:%% 
table%% 
=>%% !
new%%" %
{&& 
Id'' 
='' 
table'' 
.'' 
Column'' %
<''% &
int''& )
>'') *
(''* +
nullable''+ 3
:''3 4
false''5 :
)'': ;
.(( 

Annotation(( #
(((# $
$str(($ 8
,((8 9
$str((: @
)((@ A
,((A B
Name)) 
=)) 
table))  
.))  !
Column))! '
<))' (
string))( .
>)). /
())/ 0
	maxLength))0 9
:))9 :
$num)); >
,))> ?
nullable))@ H
:))H I
false))J O
)))O P
,))P Q
Description** 
=**  !
table**" '
.**' (
Column**( .
<**. /
string**/ 5
>**5 6
(**6 7
	maxLength**7 @
:**@ A
$num**B E
,**E F
nullable**G O
:**O P
false**Q V
)**V W
,**W X
Price++ 
=++ 
table++ !
.++! "
Column++" (
<++( )
decimal++) 0
>++0 1
(++1 2
type++2 6
:++6 7
$str++8 H
,++H I
nullable++J R
:++R S
false++T Y
)++Y Z
,++Z [

PictureUrl,, 
=,,  
table,,! &
.,,& '
Column,,' -
<,,- .
string,,. 4
>,,4 5
(,,5 6
nullable,,6 >
:,,> ?
true,,@ D
),,D E
,,,E F
ProductTypeId-- !
=--" #
table--$ )
.--) *
Column--* 0
<--0 1
int--1 4
>--4 5
(--5 6
nullable--6 >
:--> ?
false--@ E
)--E F
,--F G
ProductBrandId.. "
=..# $
table..% *
...* +
Column..+ 1
<..1 2
int..2 5
>..5 6
(..6 7
nullable..7 ?
:..? @
false..A F
)..F G
}// 
,// 
constraints00 
:00 
table00 "
=>00# %
{11 
table22 
.22 

PrimaryKey22 $
(22$ %
$str22% 2
,222 3
x224 5
=>226 8
x229 :
.22: ;
Id22; =
)22= >
;22> ?
table33 
.33 

ForeignKey33 $
(33$ %
name44 
:44 
$str44 H
,44H I
column55 
:55 
x55  !
=>55" $
x55% &
.55& '
ProductBrandId55' 5
,555 6
principalTable66 &
:66& '
$str66( 7
,667 8
principalColumn77 '
:77' (
$str77) -
,77- .
onDelete88  
:88  !
ReferentialAction88" 3
.883 4
Cascade884 ;
)88; <
;88< =
table99 
.99 

ForeignKey99 $
(99$ %
name:: 
::: 
$str:: F
,::F G
column;; 
:;; 
x;;  !
=>;;" $
x;;% &
.;;& '
ProductTypeId;;' 4
,;;4 5
principalTable<< &
:<<& '
$str<<( 6
,<<6 7
principalColumn== '
:==' (
$str==) -
,==- .
onDelete>>  
:>>  !
ReferentialAction>>" 3
.>>3 4
Cascade>>4 ;
)>>; <
;>>< =
}?? 
)?? 
;?? 
migrationBuilderAA 
.AA 

InsertDataAA '
(AA' (
tableBB 
:BB 
$strBB &
,BB& '
columnsCC 
:CC 
newCC 
[CC 
]CC 
{CC  
$strCC! %
,CC% &
$strCC' -
}CC. /
,CC/ 0
valuesDD 
:DD 
newDD 
objectDD "
[DD" #
,DD# $
]DD$ %
{EE 
{FF 
$numFF 
,FF 
$strFF "
}FF# $
,FF$ %
{GG 
$numGG 
,GG 
$strGG "
}GG# $
,GG$ %
{HH 
$numHH 
,HH 
$strHH "
}HH# $
,HH$ %
{II 
$numII 
,II 
$strII  
}II! "
,II" #
{JJ 
$numJJ 
,JJ 
$strJJ %
}JJ& '
,JJ' (
{KK 
$numKK 
,KK 
$strKK  
}KK! "
}LL 
)LL 
;LL 
migrationBuilderNN 
.NN 

InsertDataNN '
(NN' (
tableOO 
:OO 
$strOO %
,OO% &
columnsPP 
:PP 
newPP 
[PP 
]PP 
{PP  
$strPP! %
,PP% &
$strPP' -
}PP. /
,PP/ 0
valuesQQ 
:QQ 
newQQ 
objectQQ "
[QQ" #
,QQ# $
]QQ$ %
{RR 
{SS 
$numSS 
,SS 
$strSS !
}SS" #
,SS# $
{TT 
$numTT 
,TT 
$strTT 
}TT  !
,TT! "
{UU 
$numUU 
,UU 
$strUU  
}UU! "
,UU" #
{VV 
$numVV 
,VV 
$strVV !
}VV" #
}WW 
)WW 
;WW 
migrationBuilderYY 
.YY 

InsertDataYY '
(YY' (
tableZZ 
:ZZ 
$strZZ !
,ZZ! "
columns[[ 
:[[ 
new[[ 
[[[ 
][[ 
{[[  
$str[[! %
,[[% &
$str[[' 4
,[[4 5
$str[[6 <
,[[< =
$str[[> J
,[[J K
$str[[L S
,[[S T
$str[[U e
,[[e f
$str[[g v
}[[w x
,[[x y
values\\ 
:\\ 
new\\ 
object\\ "
[\\" #
,\\# $
]\\$ %
{]] 
{^^ 
$num^^ 
,^^ 
$str	^^ ·
,
^^· ‚
$str
^^„ Å
,
^^Å Ç
$str
^^É †
,
^^† °
$num
^^¢ ¶
,
^^¶ ß
$num
^^® ©
,
^^© ™
$num
^^´ ¨
}
^^≠ Æ
,
^^Æ Ø
{__ 
$num__ 
,__ 
$str	__ ¶
,
__¶ ß
$str
__® ª
,
__ª º
$str
__Ω ﬁ
,
__ﬁ ﬂ
$num
__‡ „
,
__„ ‰
$num
__Â Ê
,
__Ê Á
$num
__Ë È
}
__Í Î
,
__Î Ï
{`` 
$num`` 
,`` 
$str`` T
,``T U
$str``V h
,``h i
$str	``j ã
,
``ã å
$num
``ç ê
,
``ê ë
$num
``í ì
,
``ì î
$num
``ï ñ
}
``ó ò
,
``ò ô
{aa 
$numaa 
,aa 
$str	aa ¢
,
aa¢ £
$str
aa§ ∏
,
aa∏ π
$str
aa∫ Ÿ
,
aaŸ ⁄
$num
aa€ ﬂ
,
aaﬂ ‡
$num
aa· ‚
,
aa‚ „
$num
aa‰ Â
}
aaÊ Á
,
aaÁ Ë
{bb 
$numbb 
,bb 
$strbb X
,bbX Y
$strbbZ p
,bbp q
$str	bbr ë
,
bbë í
$num
bbì ó
,
bbó ò
$num
bbô ö
,
bbö õ
$num
bbú ù
}
bbû ü
,
bbü †
{cc 
$numcc 
,cc 
$str	cc ¶
,
cc¶ ß
$str
cc® ª
,
ccª º
$str
ccΩ ›
,
cc› ﬁ
$num
ccﬂ Ê
,
ccÊ Á
$num
ccË È
,
ccÈ Í
$num
ccÎ Ï
}
ccÌ Ó
,
ccÓ Ô
{dd 
$numdd 
,dd 
$str	dd ·
,
dd· ‚
$str
dd„ Û
,
ddÛ Ù
$str
ddı ï
,
ddï ñ
$num
ddó û
,
ddû ü
$num
dd† °
,
dd° ¢
$num
dd£ §
}
dd• ¶
,
dd¶ ß
{ee 
$numee 
,ee 
$str	ee ¢
,
ee¢ £
$str
ee§ µ
,
eeµ ∂
$str
ee∑ ÿ
,
eeÿ Ÿ
$num
ee⁄ ﬁ
,
eeﬁ ﬂ
$num
ee‡ ·
,
ee· ‚
$num
ee„ ‰
}
eeÂ Ê
,
eeÊ Á
{ff 
$numff 
,ff 
$str	ff ç
,
ffç é
$str
ffè ®
,
ff® ©
$str
ff™  
,
ff  À
$num
ffÃ œ
,
ffœ –
$num
ff— “
,
ff“ ”
$num
ff‘ ’
}
ff÷ ◊
,
ff◊ ÿ
{gg 
$numgg 
,gg 
$str	gg °
,
gg° ¢
$str
gg£ ª
,
ggª º
$str
ggΩ ›
,
gg› ﬁ
$num
ggﬂ ·
,
gg· ‚
$num
gg„ ‰
,
gg‰ Â
$num
ggÊ Á
}
ggË È
,
ggÈ Í
{hh 
$numhh 
,hh 
$str	hh ç
,
hhç é
$str
hhè û
,
hhû ü
$str
hh† ø
,
hhø ¿
$num
hh¡ ƒ
,
hhƒ ≈
$num
hh∆ «
,
hh« »
$num
hh…  
}
hhÀ Ã
,
hhÃ Õ
{ii 
$numii 
,ii 
$strii W
,iiW X
$striiY q
,iiq r
$str	iis è
,
iiè ê
$num
iië ï
,
iiï ñ
$num
iió ò
,
iiò ô
$num
iiö õ
}
iiú ù
,
iiù û
{jj 
$numjj 
,jj 
$str	jj ﬂ
,
jjﬂ ‡
$str
jj· Ä
,
jjÄ Å
$str
jjÇ °
,
jj° ¢
$num
jj£ ß
,
jjß ®
$num
jj© ™
,
jj™ ´
$num
jj¨ ≠
}
jjÆ Ø
,
jjØ ∞
{kk 
$numkk 
,kk 
$str	kk •
,
kk• ¶
$str
kkß Ω
,
kkΩ æ
$str
kkø ›
,
kk› ﬁ
$num
kkﬂ „
,
kk„ ‰
$num
kkÂ Ê
,
kkÊ Á
$num
kkË È
}
kkÍ Î
,
kkÎ Ï
{ll 
$numll 
,ll 
$str	ll °
,
ll° ¢
$str
ll£ º
,
llº Ω
$str
llæ ‹
,
ll‹ ›
$num
llﬁ ‚
,
ll‚ „
$num
ll‰ Â
,
llÂ Ê
$num
llÁ Ë
}
llÈ Í
,
llÍ Î
{mm 
$nummm 
,mm 
$strmm T
,mmT U
$strmmV p
,mmp q
$str	mmr è
,
mmè ê
$num
mmë ï
,
mmï ñ
$num
mmó ò
,
mmò ô
$num
mmö õ
}
mmú ù
,
mmù û
{nn 
$numnn 
,nn 
$strnn v
,nnv w
$str	nnx ç
,
nnç é
$str
nnè ±
,
nn± ≤
$num
nn≥ ∂
,
nn∂ ∑
$num
nn∏ π
,
nnπ ∫
$num
nnª º
}
nnΩ æ
,
nnæ ø
{oo 
$numoo 
,oo 
$str	oo ¶
,
oo¶ ß
$str
oo® º
,
ooº Ω
$str
ooæ ‡
,
oo‡ ·
$num
oo‚ Â
,
ooÂ Ê
$num
ooÁ Ë
,
ooË È
$num
ooÍ Î
}
ooÏ Ì
}pp 
)pp 
;pp 
migrationBuilderrr 
.rr 
CreateIndexrr (
(rr( )
namess 
:ss 
$strss 2
,ss2 3
tablett 
:tt 
$strtt !
,tt! "
columnuu 
:uu 
$struu (
)uu( )
;uu) *
migrationBuilderww 
.ww 
CreateIndexww (
(ww( )
namexx 
:xx 
$strxx 1
,xx1 2
tableyy 
:yy 
$stryy !
,yy! "
columnzz 
:zz 
$strzz '
)zz' (
;zz( )
}{{ 	
	protected}} 
override}} 
void}} 
Down}}  $
(}}$ %
MigrationBuilder}}% 5
migrationBuilder}}6 F
)}}F G
{~~ 	
migrationBuilder 
. 
	DropTable &
(& '
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ  
)
ÄÄ  !
;
ÄÄ! "
migrationBuilder
ÇÇ 
.
ÇÇ 
	DropTable
ÇÇ &
(
ÇÇ& '
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ %
)
ÉÉ% &
;
ÉÉ& '
migrationBuilder
ÖÖ 
.
ÖÖ 
	DropTable
ÖÖ &
(
ÖÖ& '
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ $
)
ÜÜ$ %
;
ÜÜ% &
}
áá 	
}
àà 
}ââ âo
GC:\programozas\udemy\skinet\DAL\Migrations\20201004101039_OrderAdded.cs
	namespace 	
DAL
 
. 

Migrations 
{ 
public 

partial 
class 

OrderAdded #
:$ %
	Migration& /
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{		 	
migrationBuilder

 
.

 
AlterColumn

 (
<

( )
string

) /
>

/ 0
(

0 1
name 
: 
$str 
, 
table 
: 
$str !
,! "
	maxLength 
: 
$num 
, 
nullable 
: 
false 
,  

oldClrType 
: 
typeof "
(" #
string# )
)) *
,* +
oldType 
: 
$str (
,( )
oldMaxLength 
: 
$num !
)! "
;" #
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str &
,& '
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
nullable+ 3
:3 4
false5 :
): ;
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
	ShortName 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
nullable5 =
:= >
true? C
)C D
,D E
DeliveryTime  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
nullable8 @
:@ A
trueB F
)F G
,G H
Description 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
nullable7 ?
:? @
trueA E
)E F
,F G
Price 
= 
table !
.! "
Column" (
<( )
decimal) 0
>0 1
(1 2
type2 6
:6 7
$str8 G
,G H
nullableI Q
:Q R
falseS X
)X Y
} 
, 
constraints 
: 
table "
=># %
{ 
table   
.   

PrimaryKey   $
(  $ %
$str  % 8
,  8 9
x  : ;
=>  < >
x  ? @
.  @ A
Id  A C
)  C D
;  D E
}!! 
)!! 
;!! 
migrationBuilder## 
.## 
CreateTable## (
(##( )
name$$ 
:$$ 
$str$$ 
,$$ 
columns%% 
:%% 
table%% 
=>%% !
new%%" %
{&& 
Id'' 
='' 
table'' 
.'' 
Column'' %
<''% &
int''& )
>'') *
(''* +
nullable''+ 3
:''3 4
false''5 :
)'': ;
.(( 

Annotation(( #
(((# $
$str(($ 8
,((8 9
$str((: @
)((@ A
,((A B

BuyerEmail)) 
=))  
table))! &
.))& '
Column))' -
<))- .
string)). 4
>))4 5
())5 6
nullable))6 >
:))> ?
true))@ D
)))D E
,))E F
	OrderDate** 
=** 
table**  %
.**% &
Column**& ,
<**, -
DateTimeOffset**- ;
>**; <
(**< =
nullable**= E
:**E F
false**G L
)**L M
,**M N#
ShipToAddress_FirstName++ +
=++, -
table++. 3
.++3 4
Column++4 :
<++: ;
string++; A
>++A B
(++B C
nullable++C K
:++K L
true++M Q
)++Q R
,++R S"
ShipToAddress_LastName,, *
=,,+ ,
table,,- 2
.,,2 3
Column,,3 9
<,,9 :
string,,: @
>,,@ A
(,,A B
nullable,,B J
:,,J K
true,,L P
),,P Q
,,,Q R 
ShipToAddress_Street-- (
=--) *
table--+ 0
.--0 1
Column--1 7
<--7 8
string--8 >
>--> ?
(--? @
nullable--@ H
:--H I
true--J N
)--N O
,--O P
ShipToAddress_City.. &
=..' (
table..) .
.... /
Column../ 5
<..5 6
string..6 <
>..< =
(..= >
nullable..> F
:..F G
true..H L
)..L M
,..M N
ShipToAddress_State// '
=//( )
table//* /
./// 0
Column//0 6
<//6 7
string//7 =
>//= >
(//> ?
nullable//? G
://G H
true//I M
)//M N
,//N O!
ShipToAddress_Zipcode00 )
=00* +
table00, 1
.001 2
Column002 8
<008 9
string009 ?
>00? @
(00@ A
nullable00A I
:00I J
true00K O
)00O P
,00P Q
DeliveryMethodId11 $
=11% &
table11' ,
.11, -
Column11- 3
<113 4
int114 7
>117 8
(118 9
nullable119 A
:11A B
true11C G
)11G H
,11H I
Subtotal22 
=22 
table22 $
.22$ %
Column22% +
<22+ ,
decimal22, 3
>223 4
(224 5
nullable225 =
:22= >
false22? D
)22D E
,22E F
Status33 
=33 
table33 "
.33" #
Column33# )
<33) *
string33* 0
>330 1
(331 2
nullable332 :
:33: ;
false33< A
)33A B
,33B C
PaymentIntentId44 #
=44$ %
table44& +
.44+ ,
Column44, 2
<442 3
string443 9
>449 :
(44: ;
nullable44; C
:44C D
true44E I
)44I J
}55 
,55 
constraints66 
:66 
table66 "
=>66# %
{77 
table88 
.88 

PrimaryKey88 $
(88$ %
$str88% 0
,880 1
x882 3
=>884 6
x887 8
.888 9
Id889 ;
)88; <
;88< =
table99 
.99 

ForeignKey99 $
(99$ %
name:: 
::: 
$str:: I
,::I J
column;; 
:;; 
x;;  !
=>;;" $
x;;% &
.;;& '
DeliveryMethodId;;' 7
,;;7 8
principalTable<< &
:<<& '
$str<<( 8
,<<8 9
principalColumn== '
:==' (
$str==) -
,==- .
onDelete>>  
:>>  !
ReferentialAction>>" 3
.>>3 4
Restrict>>4 <
)>>< =
;>>= >
}?? 
)?? 
;?? 
migrationBuilderAA 
.AA 
CreateTableAA (
(AA( )
nameBB 
:BB 
$strBB "
,BB" #
columnsCC 
:CC 
tableCC 
=>CC !
newCC" %
{DD 
IdEE 
=EE 
tableEE 
.EE 
ColumnEE %
<EE% &
intEE& )
>EE) *
(EE* +
nullableEE+ 3
:EE3 4
falseEE5 :
)EE: ;
.FF 

AnnotationFF #
(FF# $
$strFF$ 8
,FF8 9
$strFF: @
)FF@ A
,FFA B%
itemOrdered_ProductItemIdGG -
=GG. /
tableGG0 5
.GG5 6
ColumnGG6 <
<GG< =
intGG= @
>GG@ A
(GGA B
nullableGGB J
:GGJ K
trueGGL P
)GGP Q
,GGQ R#
itemOrdered_ProductNameHH +
=HH, -
tableHH. 3
.HH3 4
ColumnHH4 :
<HH: ;
stringHH; A
>HHA B
(HHB C
nullableHHC K
:HHK L
trueHHM Q
)HHQ R
,HHR S"
itemOrdered_PictureUrlII *
=II+ ,
tableII- 2
.II2 3
ColumnII3 9
<II9 :
stringII: @
>II@ A
(IIA B
nullableIIB J
:IIJ K
trueIIL P
)IIP Q
,IIQ R
PriceJJ 
=JJ 
tableJJ !
.JJ! "
ColumnJJ" (
<JJ( )
decimalJJ) 0
>JJ0 1
(JJ1 2
typeJJ2 6
:JJ6 7
$strJJ8 G
,JJG H
nullableJJI Q
:JJQ R
falseJJS X
)JJX Y
,JJY Z
QuantityKK 
=KK 
tableKK $
.KK$ %
ColumnKK% +
<KK+ ,
intKK, /
>KK/ 0
(KK0 1
nullableKK1 9
:KK9 :
falseKK; @
)KK@ A
,KKA B
OrderIdLL 
=LL 
tableLL #
.LL# $
ColumnLL$ *
<LL* +
intLL+ .
>LL. /
(LL/ 0
nullableLL0 8
:LL8 9
trueLL: >
)LL> ?
}MM 
,MM 
constraintsNN 
:NN 
tableNN "
=>NN# %
{OO 
tablePP 
.PP 

PrimaryKeyPP $
(PP$ %
$strPP% 4
,PP4 5
xPP6 7
=>PP8 :
xPP; <
.PP< =
IdPP= ?
)PP? @
;PP@ A
tableQQ 
.QQ 

ForeignKeyQQ $
(QQ$ %
nameRR 
:RR 
$strRR <
,RR< =
columnSS 
:SS 
xSS  !
=>SS" $
xSS% &
.SS& '
OrderIdSS' .
,SS. /
principalTableTT &
:TT& '
$strTT( 0
,TT0 1
principalColumnUU '
:UU' (
$strUU) -
,UU- .
onDeleteVV  
:VV  !
ReferentialActionVV" 3
.VV3 4
CascadeVV4 ;
)VV; <
;VV< =
}WW 
)WW 
;WW 
migrationBuilderYY 
.YY 

InsertDataYY '
(YY' (
tableZZ 
:ZZ 
$strZZ '
,ZZ' (
columns[[ 
:[[ 
new[[ 
[[[ 
][[ 
{[[  
$str[[! %
,[[% &
$str[[' 5
,[[5 6
$str[[7 D
,[[D E
$str[[F M
,[[M N
$str[[O Z
}[[[ \
,[[\ ]
values\\ 
:\\ 
new\\ 
object\\ "
[\\" #
,\\# $
]\\$ %
{]] 
{^^ 
$num^^ 
,^^ 
$str^^ #
,^^# $
$str^^% <
,^^< =
$num^^> A
,^^A B
$str^^C I
}^^J K
,^^K L
{__ 
$num__ 
,__ 
$str__ #
,__# $
$str__% ;
,__; <
$num__= ?
,__? @
$str__A G
}__H I
,__I J
{`` 
$num`` 
,`` 
$str`` $
,``$ %
$str``& 8
,``8 9
$num``: <
,``< =
$str``> D
}``E F
,``F G
{aa 
$numaa 
,aa 
$straa $
,aa$ %
$straa& F
,aaF G
$numaaH J
,aaJ K
$straaL R
}aaS T
}bb 
)bb 
;bb 
migrationBuilderdd 
.dd 
CreateIndexdd (
(dd( )
nameee 
:ee 
$stree -
,ee- .
tableff 
:ff 
$strff #
,ff# $
columngg 
:gg 
$strgg !
)gg! "
;gg" #
migrationBuilderii 
.ii 
CreateIndexii (
(ii( )
namejj 
:jj 
$strjj 2
,jj2 3
tablekk 
:kk 
$strkk 
,kk  
columnll 
:ll 
$strll *
)ll* +
;ll+ ,
}mm 	
	protectedoo 
overrideoo 
voidoo 
Downoo  $
(oo$ %
MigrationBuilderoo% 5
migrationBuilderoo6 F
)ooF G
{pp 	
migrationBuilderqq 
.qq 
	DropTableqq &
(qq& '
namerr 
:rr 
$strrr "
)rr" #
;rr# $
migrationBuildertt 
.tt 
	DropTablett &
(tt& '
nameuu 
:uu 
$struu 
)uu 
;uu  
migrationBuilderww 
.ww 
	DropTableww &
(ww& '
namexx 
:xx 
$strxx &
)xx& '
;xx' (
migrationBuilderzz 
.zz 
AlterColumnzz (
<zz( )
stringzz) /
>zz/ 0
(zz0 1
name{{ 
:{{ 
$str{{ 
,{{ 
table|| 
:|| 
$str|| !
,||! "
type}} 
:}} 
$str}} %
,}}% &
	maxLength~~ 
:~~ 
$num~~ 
,~~ 
nullable 
: 
false 
,  

oldClrType
ÄÄ 
:
ÄÄ 
typeof
ÄÄ "
(
ÄÄ" #
string
ÄÄ# )
)
ÄÄ) *
,
ÄÄ* +
oldMaxLength
ÅÅ 
:
ÅÅ 
$num
ÅÅ !
)
ÅÅ! "
;
ÅÅ" #
}
ÇÇ 	
}
ÉÉ 
}ÑÑ ”~
8C:\programozas\udemy\skinet\DAL\Services\OrderService.cs
	namespace 	
DAL
 
. 
Services 
. 
OrderService #
{ 
public 

class 
BenchmarkResults !
{ 
public 
long 
ElapsedTicks  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
Count 
{ 
get 
; 
set  #
;# $
}% &
public 
long 
AvgTick 
{ 
get !
=>" $
ElapsedTicks% 1
/2 3
Count4 9
;9 :
}; <
} 
public 

class 
OrderService 
: 
IOrderService  -
{ 
private 
readonly 
IBasketRepository *
_basketRepository+ <
;< =
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IPaymentService (
_paymentService) 8
;8 9
static 
BenchmarkResults 
[  
]  !
_results" *
=+ ,
new- 0
BenchmarkResults1 A
[A B
$numB C
]C D
{E F
newG J
BenchmarkResultsK [
([ \
)\ ]
,] ^
new_ b
BenchmarkResultsc s
(s t
)t u
}v w
;w x
public   
OrderService   
(   
IBasketRepository   -
basketRepository  . >
,  > ?
IUnitOfWork  @ K

unitOfWork  L V
,  V W
IPaymentService  X g
paymentService  h v
)  v w
{!! 	
_basketRepository"" 
="" 
basketRepository""  0
;""0 1
_unitOfWork## 
=## 

unitOfWork## $
;##$ %
_paymentService$$ 
=$$ 
paymentService$$ ,
;$$, -
}%% 	
private'' 
async'' 
Task'' 
benchmark01'' &
(''& '
string''' -

buyerEmail''. 8
,''8 9
int'': =
deliveryMethodId''> N
,''N O
string''P V
basketId''W _
,''_ `
Address((2 9
shippingAddress((: I
)((I J
{)) 	
var** 
basket** 
=** 
await** 
_basketRepository** 0
.**0 1
GetBasketAsync**1 ?
(**? @
basketId**@ H
)**H I
;**I J
var++ 

basketById++ 
=++ 
basket++ #
.++# $
Items++$ )
.++) *
ToDictionary++* 6
(++6 7
i++7 8
=>++9 ;
i++< =
.++= >
Id++> @
,++@ A
i++B C
=>++D F
i++G H
.++H I
Quantity++I Q
)++Q R
;++R S
var-- 
productItems-- 
=-- 
await-- $
_unitOfWork--% 0
.--0 1

Repository--1 ;
<--; <
Product--< C
>--C D
(--D E
)--E F
.--F G
GetByIdsAsync--G T
(--T U
basket--U [
.--[ \
Items--\ a
.--a b
Select--b h
(--h i
i--i j
=>--k m
i--n o
.--o p
Id--p r
)--r s
.--s t
ToArray--t {
(--{ |
)--| }
)--} ~
;--~ 
var// 
itemsOrdered// 
=// 
productItems// +
.//+ ,
Select//, 2
(//2 3
p//3 4
=>//5 7
new//8 ;
ProductItemOrdered//< N
{//O P
ProductItemId//Q ^
=//_ `
p//a b
.//b c
Id//c e
,//e f

PictureUrl//g q
=//r s
p//t u
.//u v

PictureUrl	//v Ä
,
//Ä Å
ProductName
//Ç ç
=
//é è
p
//ê ë
.
//ë í
Name
//í ñ
}
//ó ò
)
//ò ô
.
//ô ö
ToList
//ö †
(
//† °
)
//° ¢
;
//¢ £
var00 

orderItems00 
=00 
new00  
List00! %
<00% &
	OrderItem00& /
>00/ 0
(000 1
productItems001 =
.00= >
Count00> C
)00C D
;00D E
for11 
(11 
int11 
i11 
=11 
$num11 
;11 
i11 
<11 
productItems11  ,
.11, -
Count11- 2
;112 3
i114 5
++115 7
)117 8
{22 
var33 
item33 
=33 
productItems33 '
[33' (
i33( )
]33) *
;33* +

orderItems44 
.44 
Add44 
(44 
new44 "
	OrderItem44# ,
(44, -
itemsOrdered44- 9
[449 :
i44: ;
]44; <
,44< =
item44> B
.44B C
Price44C H
,44H I

basketById44J T
[44T U
item44U Y
.44Y Z
Id44Z \
]44\ ]
)44] ^
)44^ _
;44_ `
}66 
;66 
}77 	
private88 
async88 
Task88 
benchmark0288 &
(88& '
string88' -

buyerEmail88. 8
,888 9
int88: =
deliveryMethodId88> N
,88N O
string88P V
basketId88W _
,88_ `
Address992 9
shippingAddress99: I
)99I J
{:: 	
var;; 
basket;; 
=;; 
await;; 
_basketRepository;; 0
.;;0 1
GetBasketAsync;;1 ?
(;;? @
basketId;;@ H
);;H I
;;;I J
var== 
items== 
=== 
new== 
List==  
<==  !
	OrderItem==! *
>==* +
(==+ ,
)==, -
;==- .
foreach>> 
(>> 
var>> 
item>> 
in>>  
basket>>! '
.>>' (
Items>>( -
)>>- .
{?? 
var@@ 
productItem@@ 
=@@  !
await@@" '
_unitOfWork@@( 3
.@@3 4

Repository@@4 >
<@@> ?
Product@@? F
>@@F G
(@@G H
)@@H I
.@@I J
GetByIdAsync@@J V
(@@V W
item@@W [
.@@[ \
Id@@\ ^
)@@^ _
;@@_ `
varAA 
itemOrdered2AA  
=AA! "
newAA# &
ProductItemOrderedAA' 9
(AA9 :
productItemAA: E
.AAE F
IdAAF H
,AAH I
productItemAAJ U
.AAU V
NameAAV Z
,AAZ [
productItemAA\ g
.AAg h

PictureUrlAAh r
)AAr s
;AAs t
varBB 
	orderItemBB 
=BB 
newBB  #
	OrderItemBB$ -
(BB- .
itemOrdered2BB. :
,BB: ;
productItemBB< G
.BBG H
PriceBBH M
,BBM N
itemBBO S
.BBS T
QuantityBBT \
)BB\ ]
;BB] ^
itemsCC 
.CC 
AddCC 
(CC 
	orderItemCC #
)CC# $
;CC$ %
}DD 
;DD 
}FF 	
publicGG 
asyncGG 
TaskGG 
<GG 
OrderGG 
>GG  
CreateOrderAsyncGG! 1
(GG1 2
stringGG2 8

buyerEmailGG9 C
,GGC D
intGGE H
deliveryMethodIdGGI Y
,GGY Z
stringGG[ a
basketIdGGb j
,GGj k
AddressHH2 9
shippingAddressHH: I
)HHI J
{II 	
varZZ 
basketZZ 
=ZZ 
awaitZZ 
_basketRepositoryZZ 0
.ZZ0 1
GetBasketAsyncZZ1 ?
(ZZ? @
basketIdZZ@ H
)ZZH I
;ZZI J
var[[ 

basketById[[ 
=[[ 
basket[[ #
.[[# $
Items[[$ )
.[[) *
ToDictionary[[* 6
([[6 7
i[[7 8
=>[[9 ;
i[[< =
.[[= >
Id[[> @
,[[@ A
i[[B C
=>[[D F
i[[G H
.[[H I
Quantity[[I Q
)[[Q R
;[[R S
var\\ 
productItems\\ 
=\\ 
await\\ $
_unitOfWork\\% 0
.\\0 1

Repository\\1 ;
<\\; <
Product\\< C
>\\C D
(\\D E
)\\E F
.\\F G
GetByIdsAsync\\G T
(\\T U
basket\\U [
.\\[ \
Items\\\ a
.\\a b
Select\\b h
(\\h i
i\\i j
=>\\k m
i\\n o
.\\o p
Id\\p r
)\\r s
.\\s t
ToArray\\t {
(\\{ |
)\\| }
)\\} ~
;\\~ 
var]] 
itemsOrdered]] 
=]] 
productItems]] +
.]]+ ,
Select]], 2
(]]2 3
p]]3 4
=>]]5 7
new]]8 ;
ProductItemOrdered]]< N
{]]O P
ProductItemId]]Q ^
=]]_ `
p]]a b
.]]b c
Id]]c e
,]]e f

PictureUrl]]g q
=]]r s
p]]t u
.]]u v

PictureUrl	]]v Ä
,
]]Ä Å
ProductName
]]Ç ç
=
]]é è
p
]]ê ë
.
]]ë í
Name
]]í ñ
}
]]ó ò
)
]]ò ô
.
]]ô ö
ToList
]]ö †
(
]]† °
)
]]° ¢
;
]]¢ £
var^^ 

orderItems^^ 
=^^ 
new^^  
List^^! %
<^^% &
	OrderItem^^& /
>^^/ 0
(^^0 1
productItems^^1 =
.^^= >
Count^^> C
)^^C D
;^^D E
for__ 
(__ 
int__ 
i__ 
=__ 
$num__ 
;__ 
i__ 
<__ 
productItems__  ,
.__, -
Count__- 2
;__2 3
i__4 5
++__5 7
)__7 8
{`` 
varaa 
itemaa 
=aa 
productItemsaa '
[aa' (
iaa( )
]aa) *
;aa* +

orderItemsbb 
.bb 
Addbb 
(bb 
newbb "
	OrderItembb# ,
(bb, -
itemsOrderedbb- 9
[bb9 :
ibb: ;
]bb; <
,bb< =
itembb> B
.bbB C
PricebbC H
,bbH I

basketByIdbbJ T
[bbT U
itembbU Y
.bbY Z
IdbbZ \
]bb\ ]
)bb] ^
)bb^ _
;bb_ `
}dd 
;dd 
varhh 
deliveryMethodshh 
=hh  !
awaithh" '
_unitOfWorkhh( 3
.hh3 4

Repositoryhh4 >
<hh> ?
DeliveryMethodhh? M
>hhM N
(hhN O
)hhO P
.hhP Q
GetByIdAsynchhQ ]
(hh] ^
deliveryMethodIdhh^ n
)hhn o
;hho p
varjj 
subtotaljj 
=jj 

orderItemsjj %
.jj% &
Sumjj& )
(jj) *
ijj* +
=>jj, .
ijj/ 0
.jj0 1
Pricejj1 6
*jj7 8
ijj9 :
.jj: ;
Quantityjj; C
)jjC D
;jjD E
varll 
specll 
=ll 
newll /
#OrderByPaymentIntentIdSpecificationll >
(ll> ?
basketll? E
.llE F
PaymentIntentIdllF U
)llU V
;llV W
varmm 
existingOrdermm 
=mm 
awaitmm  %
_unitOfWorkmm& 1
.mm1 2

Repositorymm2 <
<mm< =
Ordermm= B
>mmB C
(mmC D
)mmD E
.mmE F
GetEntityWithSpecmmF W
(mmW X
specmmX \
)mm\ ]
;mm] ^
ifnn 
(nn 
existingOrdernn 
!=nn 
nullnn  $
)nn$ %
{oo 
_unitOfWorkpp 
.pp 

Repositorypp &
<pp& '
Orderpp' ,
>pp, -
(pp- .
)pp. /
.pp/ 0
Deletepp0 6
(pp6 7
existingOrderpp7 D
)ppD E
;ppE F
awaitqq 
_paymentServiceqq %
.qq% &'
CreateOrUpdatePaymentIntentqq& A
(qqA B
basketqqB H
.qqH I
PaymentIntentIdqqI X
)qqX Y
;qqY Z
}rr 
vartt 
ordertt 
=tt 
newtt 
Ordertt !
(tt! "

orderItemstt" ,
,tt, -

buyerEmailtt. 8
,tt8 9
shippingAddresstt: I
,ttI J
deliveryMethodsttK Z
,ttZ [
subtotaltt\ d
,ttd e
basketttf l
.ttl m
PaymentIntentIdttm |
)tt| }
;tt} ~
_unitOfWorkuu 
.uu 

Repositoryuu "
<uu" #
Orderuu# (
>uu( )
(uu) *
)uu* +
.uu+ ,
Adduu, /
(uu/ 0
orderuu0 5
)uu5 6
;uu6 7
varvv 
resultvv 
=vv 
awaitvv 
_unitOfWorkvv *
.vv* +
Completevv+ 3
(vv3 4
)vv4 5
;vv5 6
ifww 
(ww 
resultww 
<=ww 
$numww 
)ww 
returnxx 
nullxx 
;xx 
return{{ 
order{{ 
;{{ 
}}} 	
public 
async 
Task 
< 
IReadOnlyList '
<' (
DeliveryMethod( 6
>6 7
>7 8#
GetDeliveryMethodsAsync9 P
(P Q
)Q R
{
ÄÄ 	
return
ÅÅ 
await
ÅÅ 
_unitOfWork
ÅÅ $
.
ÅÅ$ %

Repository
ÅÅ% /
<
ÅÅ/ 0
DeliveryMethod
ÅÅ0 >
>
ÅÅ> ?
(
ÅÅ? @
)
ÅÅ@ A
.
ÅÅA B
ListAllAsync
ÅÅB N
(
ÅÅN O
)
ÅÅO P
;
ÅÅP Q
}
ÇÇ 	
public
ÑÑ 
async
ÑÑ 
Task
ÑÑ 
<
ÑÑ 
Order
ÑÑ 
>
ÑÑ  
GetOrderByIdAsync
ÑÑ! 2
(
ÑÑ2 3
int
ÑÑ3 6
id
ÑÑ7 9
,
ÑÑ9 :
string
ÑÑ; A

buyerEmail
ÑÑB L
)
ÑÑL M
{
ÖÖ 	
var
ÜÜ 
spec
ÜÜ 
=
ÜÜ 
new
ÜÜ 5
'OrdersWithItemsAndOrderingSpecification
ÜÜ B
(
ÜÜB C
id
ÜÜC E
,
ÜÜE F

buyerEmail
ÜÜF P
)
ÜÜP Q
;
ÜÜQ R
return
áá 
await
áá 
_unitOfWork
áá $
.
áá$ %

Repository
áá% /
<
áá/ 0
Order
áá0 5
>
áá5 6
(
áá6 7
)
áá7 8
.
áá8 9
GetEntityWithSpec
áá9 J
(
ááJ K
spec
ááK O
)
ááO P
;
ááP Q
}
àà 	
public
ää 
async
ää 
Task
ää 
<
ää 
IReadOnlyList
ää '
<
ää' (
Order
ää( -
>
ää- .
>
ää. /#
GetOrdersForUserAsync
ää0 E
(
ääE F
string
ääF L

buyerEmail
ääM W
)
ääW X
{
ãã 	
var
åå 
spec
åå 
=
åå 
new
åå 5
'OrdersWithItemsAndOrderingSpecification
åå B
(
ååB C

buyerEmail
ååC M
)
ååM N
;
ååN O
return
çç 
await
çç 
_unitOfWork
çç $
.
çç$ %

Repository
çç% /
<
çç/ 0
Order
çç0 5
>
çç5 6
(
çç6 7
)
çç7 8
.
çç8 9
	ListAsync
çç9 B
(
ççB C
spec
ççC G
)
ççG H
;
ççH I
}
éé 	
}
èè 
}êê üS
:C:\programozas\udemy\skinet\DAL\Services\PaymentService.cs
	namespace 	
Infrastructure
 
. 
Services !
{ 
public 

class 
PaymentService 
:  !
IPaymentService" 1
{ 
private 
readonly 
IBasketRepository *
_basketRepository+ <
;< =
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
private 
readonly 
IConfiguration '
_config( /
;/ 0
public 
PaymentService 
( 
IBasketRepository 
basketRepository .
,. /
IUnitOfWork 

unitOfWork "
," #
IConfiguration 
config !
)! "
{ 	
_basketRepository 
= 
basketRepository  0
;0 1
_unitOfWork 
= 

unitOfWork $
;$ %
_config   
=   
config   
;   
}!! 	
public"" 
async"" 
Task"" 
<"" 
CustomerBasket"" (
>""( )'
CreateOrUpdatePaymentIntent""* E
(""E F
string""F L
basketId""M U
)""U V
{## 	
StripeConfiguration$$ 
.$$  
ApiKey$$  &
=$$' (
_config$$) 0
[$$0 1
$str$$1 K
]$$K L
;$$L M
var%% 
basket%% 
=%% 
await%% 
_basketRepository%% 0
.%%0 1
GetBasketAsync%%1 ?
(%%? @
basketId%%@ H
)%%H I
;%%I J
var&& 
shippingPrice&& 
=&& 
$num&&  "
;&&" #
if'' 
('' 
basket'' 
=='' 
null'' 
)'' 
return(( 
null(( 
;(( 
if)) 
()) 
basket)) 
.)) 
DeliveryMethodId)) '
.))' (
HasValue))( 0
)))0 1
{** 
var++ 
deliveryMethod++ "
=++# $
await++% *
_unitOfWork+++ 6
.++6 7

Repository++7 A
<++A B
DeliveryMethod++B P
>++P Q
(++Q R
)++R S
.++S T
GetByIdAsync++T `
(++` a
(++a b
int++b e
)++e f
basket++f l
.++l m
DeliveryMethodId++m }
)++} ~
;++~ 
shippingPrice,, 
=,, 
deliveryMethod,,  .
.,,. /
Price,,/ 4
;,,4 5
}-- 
var.. 
productItem.. 
=.. 
await.. #
_unitOfWork..$ /
.../ 0

Repository..0 :
<..: ;
Core..; ?
...? @
Entities..@ H
...H I
Product..I P
>..P Q
(..Q R
)..R S
...S T
GetByIdsAsync..T a
(..a b
basket..b h
...h i
Items..i n
...n o
Select..o u
(..u v
i..v w
=>..x z
i..{ |
...| }
Id..} 
)	.. Ä
.
..Ä Å
ToArray
..Å à
(
..à â
)
..â ä
)
..ä ã
;
..ã å
var// 
	itemsById// 
=// 
productItem// '
.//' (
ToDictionary//( 4
(//4 5
i//5 6
=>//7 9
i//: ;
.//; <
Id//< >
,//> ?
v//@ A
=>//B D
v//E F
.//F G
Price//G L
)//L M
;//M N
foreach00 
(00 
var00 
item00 
in00  
basket00! '
.00' (
Items00( -
)00- .
{11 
if22 
(22 
item22 
.22 
Price22 
!=22 !
	itemsById22" +
[22+ ,
item22, 0
.220 1
Id221 3
]223 4
)224 5
{33 
item44 
.44 
Price44 
=44  
	itemsById44! *
[44* +
item44+ /
.44/ 0
Id440 2
]442 3
;443 4
}55 
}88 
var99 
service99 
=99 
new99  
PaymentIntentService99 2
(992 3
)993 4
;994 5
PaymentIntent:: 
intent::  
;::  !
if;; 
(;; 
string;; 
.;; 
IsNullOrEmpty;; $
(;;$ %
basket;;% +
.;;+ ,
PaymentIntentId;;, ;
);;; <
);;< =
{<< 
var== 
options== 
=== 
new== !&
PaymentIntentCreateOptions==" <
{>> 
Amount?? 
=?? 
(?? 
long?? "
)??" #
basket??# )
.??) *
Items??* /
.??/ 0
Sum??0 3
(??3 4
i??4 5
=>??6 8
i??9 :
.??: ;
Quantity??; C
*??D E
Convert??F M
.??M N
ToInt64??N U
(??U V
i??V W
.??W X
Price??X ]
)??] ^
*??^ _
$num??_ b
+??c d
$num??e h
*??h i
Convert??i p
.??p q
ToInt64??q x
(??x y
shippingPrice	??y Ü
)
??Ü á
)
??á à
,
??à â
Currency@@ 
=@@ 
$str@@ $
,@@$ %
PaymentMethodTypesAA &
=AA' (
newAA) ,
ListAA- 1
<AA1 2
stringAA2 8
>AA8 9
{AA: ;
$strAA< B
}AAC D
}BB 
;BB 
intentCC 
=CC 
awaitCC 
serviceCC &
.CC& '
CreateAsyncCC' 2
(CC2 3
optionsCC3 :
)CC: ;
;CC; <
basketDD 
.DD 
PaymentIntentIdDD &
=DD' (
intentDD) /
.DD/ 0
IdDD0 2
;DD2 3
basketEE 
.EE 
ClientSecretEE #
=EE$ %
intentEE& ,
.EE, -
ClientSecretEE- 9
;EE9 :
}GG 
elseHH 
{II 
varJJ 
optionsJJ 
=JJ 
newJJ !&
PaymentIntentUpdateOptionsJJ" <
{KK 
AmountLL 
=LL 
(LL 
longLL "
)LL" #
basketLL# )
.LL) *
ItemsLL* /
.LL/ 0
SumLL0 3
(LL3 4
iLL4 5
=>LL6 8
iLL9 :
.LL: ;
QuantityLL; C
*LLD E
ConvertLLF M
.LLM N
ToInt64LLN U
(LLU V
iLLV W
.LLW X
PriceLLX ]
)LL] ^
*LL_ `
$numLLa d
+LLe f
$numLLg j
*LLk l
ConvertLLm t
.LLt u
ToInt64LLu |
(LL| }
shippingPrice	LL} ä
)
LLä ã
)
LLã å
,
LLå ç
}NN 
;NN 
awaitOO 
serviceOO 
.OO 
UpdateAsyncOO )
(OO) *
basketOO* 0
.OO0 1
PaymentIntentIdOO1 @
,OO@ A
optionsOOB I
)OOI J
;OOJ K
}QQ 
awaitRR 
_basketRepositoryRR #
.RR# $
UpdateBasketAsyncRR$ 5
(RR5 6
basketRR6 <
)RR< =
;RR= >
returnSS 
basketSS 
;SS 
}TT 	
publicVV 
asyncVV 
TaskVV 
<VV 
OrderVV 
>VV  $
UpdateOrderPaymentFailedVV! 9
(VV9 :
stringVV: @
paymentIntentIdVVA P
)VVP Q
{WW 	
varXX 
specXX 
=XX 
newXX /
#OrderByPaymentIntentIdSpecificationXX >
(XX> ?
paymentIntentIdXX? N
)XXN O
;XXO P
varYY 
orderYY 
=YY 
awaitYY 
_unitOfWorkYY (
.YY( )

RepositoryYY) 3
<YY3 4
OrderYY4 9
>YY9 :
(YY: ;
)YY; <
.YY< =
GetEntityWithSpecYY= N
(YYN O
specYYO S
)YYS T
;YYT U
ifZZ 
(ZZ 
orderZZ 
isZZ 
nullZZ 
)ZZ 
return[[ 
null[[ 
;[[ 
order\\ 
.\\ 
Status\\ 
=\\ 
OrderStatus\\ &
.\\& '
PaymentFailed\\' 4
;\\4 5
_unitOfWork]] 
.]] 

Repository]] "
<]]" #
Order]]# (
>]]( )
(]]) *
)]]* +
.]]+ ,
Update]], 2
(]]2 3
order]]3 8
)]]8 9
;]]9 :
await^^ 
_unitOfWork^^ 
.^^ 
Complete^^ &
(^^& '
)^^' (
;^^( )
return__ 
order__ 
;__ 
}`` 	
publicbb 
asyncbb 
Taskbb 
<bb 
Orderbb 
>bb  '
UpdateOrderPaymentSucceededbb! <
(bb< =
stringbb= C
paymentIntentIdbbD S
)bbS T
{cc 	
vardd 
specdd 
=dd 
newdd /
#OrderByPaymentIntentIdSpecificationdd >
(dd> ?
paymentIntentIddd? N
)ddN O
;ddO P
varee 
orderee 
=ee 
awaitee 
_unitOfWorkee )
.ee) *

Repositoryee* 4
<ee4 5
Orderee5 :
>ee: ;
(ee; <
)ee< =
.ee= >
GetEntityWithSpecee> O
(eeO P
speceeP T
)eeT U
;eeU V
ifff 
(ff 
orderff 
isff 
nullff 
)ff 
returngg 
nullgg 
;gg 
orderhh 
.hh 
Statushh 
=hh 
OrderStatushh &
.hh& '
PaymentReciviedhh' 6
;hh6 7
_unitOfWorkii 
.ii 

Repositoryii "
<ii" #
Orderii# (
>ii( )
(ii) *
)ii* +
.ii+ ,
Updateii, 2
(ii2 3
orderii3 8
)ii8 9
;ii9 :
awaitjj 
_unitOfWorkjj 
.jj 
Completejj &
(jj& '
)jj' (
;jj( )
returnkk 
orderkk 
;kk 
}ll 	
}mm 
}nn Á
@C:\programozas\udemy\skinet\DAL\Services\ResponseCacheService.cs
	namespace		 	
Infrastructure		
 
.		 
Services		 !
{

 
public 

class  
ResponseCacheService %
:& '!
IResponseCacheService( =
{ 
private 
readonly 
	IDatabase "
	_database# ,
;, -
public  
ResponseCacheService #
(# $"
IConnectionMultiplexer$ :
redis; @
)@ A
{ 	
	_database 
= 
redis 
. 
GetDatabase )
() *
)* +
;+ ,
} 	
public 
async 
Task 
CacheResponseAsync ,
(, -
string- 3
cacheKey4 <
,< =
object> D
responseE M
,M N
TimeSpanO W

timeToLiveX b
)b c
{ 	
if 
( 
response 
is 
null  
)  !
{ 
return 
; 
} 
var 
options 
= 
new !
JsonSerializerOptions 3
{4 5 
PropertyNamingPolicy6 J
=K L
JsonNamingPolicyM ]
.] ^
	CamelCase^ g
}h i
;i j
var 
serialisedResponse "
=# $
JsonSerializer% 3
.3 4
	Serialize4 =
(= >
response> F
,F G
optionsH O
)O P
;P Q
await 
	_database 
. 
StringSetAsync *
(* +
cacheKey+ 3
,3 4
serialisedResponse5 G
,G H
TimeSpanI Q
.Q R
FromDaysR Z
(Z [
$num[ \
)\ ]
)] ^
;^ _
} 	
public 
async 
Task 
< 
bool 
>  
InvalidateCachedData  4
(4 5
string5 ;
cacheKey< D
)D E
{ 	
return 
await 
	_database "
." #
KeyDeleteAsync# 1
(1 2
cacheKey2 :
): ;
;; <
}   	
public!! 
async!! 
Task!! 
<!! 
string!!  
>!!  !"
GetCachedResponseAsync!!" 8
(!!8 9
string!!9 ?
cacheKey!!@ H
)!!H I
{"" 	
var## 
cachedResponse## 
=##  
await##! &
	_database##' 0
.##0 1
StringGetAsync##1 ?
(##? @
cacheKey##@ H
)##H I
;##I J
if$$ 
($$ 
cachedResponse$$ 
.$$ 
IsNullOrEmpty$$ ,
)$$, -
{%% 
return&& 
null&& 
;&& 
}'' 
return(( 
cachedResponse(( !
;((! "
})) 	
}** 
}++ ®É
7C:\programozas\udemy\skinet\DAL\Services\SeedService.cs
	namespace 	
DAL
 
. 
Services 
. 
SeedService "
{ 
public 

class 
SeedService 
: 
ISeedService +
{ 
public 
IList 
< 
Product 
> 
Products &
=>' )
new* -
[- .
]. /
{0 1
new	 
Product 
( 
) 
{ 
Id 
= 
$num 
, 
Name 
= 
$str 0
,0 1
Description 
= 
$str	 Ë
,
Ë È
Price 
= 
$num 
, 

PictureUrl 
= 
$str 5
,5 6
ProductTypeId 
= 
$num 
, 
ProductBrandId 
= 
$num 
}
 
, 
new 
Product 
( 
) 
{
 
Id 
= 
$num 
, 
Name 
= 
$str ,
,, -
Description 
= 
$str T
,T U
Price 
= 
$num 
, 

PictureUrl 
= 
$str 5
,5 6
ProductTypeId 
= 
$num 
, 
ProductBrandId   
=   
$num   
}!!
 
,!! 
new!! 
Product!! 
(!! 
)!! 
{""
 
Id## 

=##
 
$num## 
,## 
Name$$ 
=$$ 
$str$$ +
,$$+ ,
Description%% 
=%% 
$str	%% °
,
%%° ¢
Price&& 
=&& 
$num&& 
,&& 

PictureUrl'' 
='' 
$str'' 6
,''6 7
ProductTypeId(( 
=(( 
$num(( 
,(( 
ProductBrandId)) 
=)) 
$num)) 
}**
 
,** 
new** 
Product** 
(** 
)** 
{++
 
Id,, 
=,, 
$num,, 
,,, 
Name-- 
=-- 
$str-- (
,--( )
Description.. 
=.. 
$str	.. •
,
..• ¶
Price// 
=// 
$num// 
,// 

PictureUrl00 
=00 
$str00 6
,006 7
ProductTypeId11 
=11 
$num11 
,11 
ProductBrandId22 
=22 
$num22 
}33
 
,33 
new33 
Product33 
(33 
)33 
{44
 
Id55 
=55 
$num55 
,55 
Name66 
=66 
$str66 1
,661 2
Description77 
=77 
$str	77 Ë
,
77Ë È
Price88 
=88 
$num88 
,88 

PictureUrl99 
=99 
$str99 7
,997 8
ProductTypeId:: 
=:: 
$num:: 
,:: 
ProductBrandId;; 
=;; 
$num;; 
}<<
 
,<< 
new<< 
Product<< 
(<< 
)<< 
{==
 
Id>> 
=>> 
$num>> 
,>> 
Name?? 
=?? 
$str?? *
,??* +
Description@@ 
=@@ 
$str@@ W
,@@W X
PriceAA 
=AA 
$numAA 
,AA 

PictureUrlBB 
=BB 
$strBB 4
,BB4 5
ProductTypeIdCC 
=CC 
$numCC 
,CC 
ProductBrandIdDD 
=DD 
$numDD 
}EE
 
,EE 
newEE 
ProductEE 
(EE 
)EE 
{FF
 
IdGG 
=GG 
$numGG 
,GG 
NameHH 
=HH 
$strHH !
,HH! "
DescriptionII 
=II 
$str	II ç
,
IIç é
PriceJJ 
=JJ 
$numJJ 
,JJ 

PictureUrlKK 
=KK 
$strKK 7
,KK7 8
ProductTypeIdLL 
=LL 
$numLL 
,LL 
ProductBrandIdMM 
=MM 
$numMM 
}NN
 
,NN 
newNN 
ProductNN 
(NN 
)NN 
{OO
 
IdPP 
=PP 
$numPP 
,PP 
NameQQ 
=QQ 
$strQQ *
,QQ* +
DescriptionRR 
=RR 
$str	RR °
,
RR° ¢
PriceSS 
=SS 
$numSS 
,SS 

PictureUrlTT 
=TT 
$strTT 8
,TT8 9
ProductTypeIdUU 
=UU 
$numUU 
,UU 
ProductBrandIdVV 
=VV 
$numVV 
}WW
 
,WW 
newWW 
ProductWW 
(WW 
)WW 
{XX
 
IdYY 
=YY 
$numYY 
,YY 
NameZZ 
=ZZ 
$strZZ +
,ZZ+ ,
Description[[ 
=[[ 
$str	[[ ç
,
[[ç é
Price\\ 
=\\ 
$num\\ 
,\\ 

PictureUrl]] 
=]] 
$str]] 8
,]]8 9
ProductTypeId^^ 
=^^ 
$num^^ 
,^^ 
ProductBrandId__ 
=__ 
$num__ 
}``
 
,`` 
new`` 
Product`` 
(`` 
)`` 
{aa
 
Idbb 
=bb 
$numbb 
,bb 
Namecc 
=cc 
$strcc $
,cc$ %
Descriptiondd 
=dd 
$strdd T
,ddT U
Priceee 
=ee 
$numee 
,ee 

PictureUrlff 
=ff 
$strff 9
,ff9 :
ProductTypeIdgg 
=gg 
$numgg 
,gg 
ProductBrandIdhh 
=hh 
$numhh 
}ii
 
,ii 
newii 
Productii 
(ii 
)ii 
{jj
 
Idkk 
=kk 
$numkk 
,kk 
Namell 
=ll 
$strll %
,ll% &
Descriptionmm 
=mm 
$str	mm •
,
mm• ¶
Pricenn 
=nn 
$numnn 
,nn 

PictureUrloo 
=oo 
$stroo 9
,oo9 :
ProductTypeIdpp 
=pp 
$numpp 
,pp 
ProductBrandIdqq 
=qq 
$numqq 
}rr
 
,rr 
newrr 
Productrr 
(rr 
)rr 
{ss
 
Idtt 
=tt 
$numtt 
,tt 
Nameuu 
=uu 
$struu '
,uu' (
Descriptionvv 
=vv 
$strvv u
,vvu v
Priceww 
=ww 
$numww 
,ww 

PictureUrlxx 
=xx 
$strxx :
,xx: ;
ProductTypeIdyy 
=yy 
$numyy 
,yy 
ProductBrandIdzz 
=zz 
$numzz 
}{{
 
,{{ 
new{{ 
Product{{ 
({{ 
){{ 
{||
 
Id}} 
=}} 
$num}} 
,}} 
Name~~ 
=~~ 
$str~~ &
,~~& '
Description 
= 
$str	 •
,
• ¶
Price
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
,
ÄÄ 

PictureUrl
ÅÅ 
=
ÅÅ 
$str
ÅÅ :
,
ÅÅ: ;
ProductTypeId
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
ProductBrandId
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
}
ÑÑ
 
,
ÑÑ 
new
ÑÑ 
Product
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ
 
Id
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
Name
áá 
=
áá 
$str
áá #
,
áá# $
Description
àà 
=
àà 
$stràà °
,àà° ¢
Price
ââ 
=
ââ 
$num
ââ 
,
ââ 

PictureUrl
ää 
=
ää 
$str
ää 9
,
ää9 :
ProductTypeId
ãã 
=
ãã 
$num
ãã 
,
ãã 
ProductBrandId
åå 
=
åå 
$num
åå 
}
çç
 
,
çç 
new
çç 
Product
çç 
(
çç 
)
çç 
{
éé
 
Id
èè 
=
èè 
$num
èè 
,
èè 
Name
êê 
=
êê 
$str
êê "
,
êê" #
Description
ëë 
=
ëë 
$strëë Ë
,ëëË È
Price
íí 
=
íí 
$num
íí 
,
íí 

PictureUrl
ìì 
=
ìì 
$str
ìì 8
,
ìì8 9
ProductTypeId
îî 
=
îî 
$num
îî 
,
îî 
ProductBrandId
ïï 
=
ïï 
$num
ïï 
}
ññ
 
,
ññ 
new
ññ 
Product
ññ 
(
ññ 
)
ññ 
{
óó
 
Id
òò 
=
òò 
$num
òò 
,
òò 
Name
ôô 
=
ôô 
$str
ôô %
,
ôô% &
Description
öö 
=
öö 
$ströö •
,öö• ¶
Price
õõ 
=
õõ 
$num
õõ 
,
õõ 

PictureUrl
úú 
=
úú 
$str
úú 8
,
úú8 9
ProductTypeId
ùù 
=
ùù 
$num
ùù 
,
ùù 
ProductBrandId
ûû 
=
ûû 
$num
ûû 
}
üü
 
,
üü 
new
üü 
Product
üü 
(
üü 
)
üü 
{
††
 
Id
°° 
=
°° 
$num
°° 
,
°° 
Name
¢¢ 
=
¢¢ 
$str
¢¢ (
,
¢¢( )
Description
££ 
=
££ 
$str
££ W
,
££W X
Price
§§ 
=
§§ 
$num
§§ 
,
§§ 

PictureUrl
•• 
=
•• 
$str
•• 7
,
••7 8
ProductTypeId
¶¶ 
=
¶¶ 
$num
¶¶ 
,
¶¶ 
ProductBrandId
ßß 
=
ßß 
$num
ßß 
}
®®
 
,
®® 
new
®® 
Product
®® 
(
®® 
)
®® 
{
©©
 
Id
™™ 
=
™™ 
$num
™™ 
,
™™ 
Name
´´ 
=
´´ 
$str
´´ &
,
´´& '
Description
¨¨ 
=
¨¨ 
$str¨¨ °
,¨¨° ¢
Price
≠≠ 
=
≠≠ 
$num
≠≠ 
,
≠≠ 

PictureUrl
ÆÆ 
=
ÆÆ 
$str
ÆÆ 7
,
ÆÆ7 8
ProductTypeId
ØØ 
=
ØØ 
$num
ØØ 
,
ØØ 
ProductBrandId
∞∞ 
=
∞∞ 
$num
∞∞ 
}
±±
 
}
≤≤ 	
;
≤≤	 

public
¥¥ 
IList
¥¥ 
<
¥¥ 
ProductBrand
¥¥ !
>
¥¥! "
ProductBrands
¥¥# 0
=>
¥¥1 3
new
¥¥4 7
[
¥¥7 8
]
¥¥8 9
{
¥¥: ;
new
¥¥> A
ProductBrand
¥¥B N
(
¥¥N O
)
¥¥O P
{
µµ
 
Id
∂∂ 
=
∂∂ 
$num
∂∂ 
,
∂∂ 
Name
∑∑ 
=
∑∑ 
$str
∑∑ 
}
∏∏
 
,
∏∏ 
new
∏∏ 
ProductBrand
∏∏ 
(
∏∏ 
)
∏∏ 
{
ππ
 
Id
∫∫ 
=
∫∫ 
$num
∫∫ 
,
∫∫ 
Name
ªª 
=
ªª 
$str
ªª 
}
ºº
 
,
ºº 
new
ºº 
ProductBrand
ºº 
(
ºº 
)
ºº 
{
ΩΩ
 
Id
ææ 
=
ææ 
$num
ææ 
,
ææ 
Name
øø 
=
øø 
$str
øø 
}
¿¿
 
,
¿¿ 
new
¿¿ 
ProductBrand
¿¿ 
(
¿¿ 
)
¿¿ 
{
¡¡
 
Id
¬¬ 
=
¬¬ 
$num
¬¬ 
,
¬¬ 
Name
√√ 
=
√√ 
$str
√√ 
}
ƒƒ
 
,
ƒƒ 
new
ƒƒ 
ProductBrand
ƒƒ 
(
ƒƒ 
)
ƒƒ 
{
≈≈
 
Id
∆∆ 
=
∆∆ 
$num
∆∆ 
,
∆∆ 
Name
«« 
=
«« 
$str
«« 
}
»»
 
,
»» 
new
»» 
ProductBrand
»» 
(
»» 
)
»» 
{
……
 
Id
   
=
   
$num
   
,
   
Name
ÀÀ 
=
ÀÀ 
$str
ÀÀ 
}
ÃÃ
 
}
ŒŒ 
;
ŒŒ 
public
–– 
IList
–– 
<
–– 
ProductType
––  
>
––  !
ProductTypes
––" .
=>
––/ 1
new
––2 5
[
––5 6
]
––6 7
{
––8 9
new
—— 
ProductType
—— 
(
—— 
)
—— 
{
““ 
Id
”” 
=
”” 
$num
”” 
,
”” 
Name
‘‘ 
=
‘‘ 
$str
‘‘ 
}
’’ 
,
’’ 
new
÷÷ 
ProductType
÷÷ 
(
÷÷ 
)
÷÷ 
{
◊◊ 
Id
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
,
ÿÿ 
Name
ŸŸ 
=
ŸŸ 
$str
ŸŸ 
}
⁄⁄ 
,
⁄⁄ 
new
€€ 
ProductType
€€ 
(
€€ 
)
€€ 
{
‹‹ 
Id
›› 
=
›› 
$num
›› 
,
›› 
Name
ﬁﬁ 
=
ﬁﬁ 
$str
ﬁﬁ 
}
ﬂﬂ 
,
ﬂﬂ 
new
‡‡ 
ProductType
‡‡ 
(
‡‡ 
)
‡‡ 
{
·· 
Id
‚‚ 
=
‚‚ 
$num
‚‚ 
,
‚‚ 
Name
„„ 
=
„„ 
$str
„„ 
}
‰‰ 
}
ÂÂ 	
;
ÂÂ	 

public
ÁÁ 
IList
ÁÁ 
<
ÁÁ 
DeliveryMethod
ÁÁ #
>
ÁÁ# $
DeliveryMethods
ÁÁ% 4
=>
ÁÁ5 7
new
ÁÁ8 ;
[
ÁÁ; <
]
ÁÁ< =
{
ÁÁ> ?
new
ËË 
DeliveryMethod
ËË *
{
ËË+ ,
Id
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
,
ÈÈ 
	ShortName
ÍÍ !
=
ÍÍ" #
$str
ÍÍ$ *
,
ÍÍ* +
Description
ÎÎ #
=
ÎÎ$ %
$str
ÎÎ& =
,
ÎÎ= >
DeliveryTime
ÏÏ $
=
ÏÏ% &
$str
ÏÏ' 1
,
ÏÏ1 2
Price
ÌÌ 
=
ÌÌ 
$num
ÌÌ  "
}
ÓÓ 
,
ÓÓ 
new
ÔÔ 
DeliveryMethod
ÔÔ *
{
ÔÔ+ ,
Id
 
=
 
$num
 
,
 
	ShortName
ÒÒ !
=
ÒÒ" #
$str
ÒÒ$ *
,
ÒÒ* +
Description
ÚÚ #
=
ÚÚ$ %
$str
ÚÚ& <
,
ÚÚ< =
DeliveryTime
ÛÛ $
=
ÛÛ% &
$str
ÛÛ' 1
,
ÛÛ1 2
Price
ÙÙ 
=
ÙÙ 
$num
ÙÙ  !
}
ıı 
,
ıı 
new
ˆˆ 
DeliveryMethod
ˆˆ *
{
ˆˆ+ ,
Id
˜˜ 
=
˜˜ 
$num
˜˜ 
,
˜˜ 
	ShortName
¯¯ !
=
¯¯" #
$str
¯¯$ *
,
¯¯* +
Description
˘˘ #
=
˘˘$ %
$str
˘˘& 8
,
˘˘8 9
DeliveryTime
˙˙ $
=
˙˙% &
$str
˙˙' 2
,
˙˙2 3
Price
˚˚ 
=
˚˚ 
$num
˚˚  !
}
¸¸ 
,
¸¸ 
new
˝˝ 
DeliveryMethod
˝˝ *
{
˝˝+ ,
Id
˛˛ 
=
˛˛ 
$num
˛˛ 
,
˛˛ 
	ShortName
ˇˇ !
=
ˇˇ" #
$str
ˇˇ$ *
,
ˇˇ* +
Description
ÄÄ #
=
ÄÄ$ %
$str
ÄÄ& F
,
ÄÄF G
DeliveryTime
ÅÅ $
=
ÅÅ% &
$str
ÅÅ' 2
,
ÅÅ2 3
Price
ÇÇ 
=
ÇÇ 
$num
ÇÇ  !
}
ÉÉ 
}
ÑÑ 	
;
ÑÑ	 

}
ÖÖ 
}ÜÜ 
8C:\programozas\udemy\skinet\DAL\Services\TokenService.cs
	namespace 	
DAL
 
. 
Services 
. 
TokenService #
{ 
public 

class 
TokenService 
: 
ITokenService  -
{ 
private 
readonly 
IConfiguration '
_config( /
;/ 0
private 
readonly  
SymmetricSecurityKey -
_key. 2
;2 3
public 
TokenService 
( 
IConfiguration *
config+ 1
)1 2
{ 	
_config 
= 
config 
; 
_key 
= 
new  
SymmetricSecurityKey +
(+ ,
Encoding, 4
.4 5
UTF85 9
.9 :
GetBytes: B
(B C
_configC J
[J K
$strK V
]V W
)W X
)X Y
;Y Z
} 	
public 
string 
CreateToken !
(! "
AppUser" )
user* .
). /
{ 	
var 
claims 
= 
new 
List !
<! "
Claim" '
>' (
{ 
new 
Claim 
( #
JwtRegisteredClaimNames 1
.1 2
Email2 7
,7 8
user8 <
.< =
Email= B
)B C
,C D
new 
Claim 
( #
JwtRegisteredClaimNames 1
.1 2
	GivenName2 ;
,; <
user< @
.@ A
DisplayNameA L
)L M
} 
; 
var 
creds 
= 
new 
SigningCredentials .
(. /
_key/ 3
,3 4
SecurityAlgorithms5 G
.G H
HmacSha512SignatureH [
)[ \
;\ ]
var 
tokenDescriptor 
=  !
new" %#
SecurityTokenDescriptor& =
{   
Subject!! 
=!! 
new!! 
ClaimsIdentity!! ,
(!!, -
claims!!- 3
)!!3 4
,!!4 5
Expires"" 
="" 
DateTime"" "
.""" #
Now""# &
.""& '
AddDays""' .
("". /
$num""/ 0
)""0 1
,""1 2
SigningCredentials## "
=### $
creds##% *
,##* +
Issuer$$ 
=$$ 
_config$$  
[$$  !
$str$$! /
]$$/ 0
}%% 
;%% 
var&& 
tokenHandler&& 
=&& 
new&& "#
JwtSecurityTokenHandler&&# :
(&&: ;
)&&; <
;&&< =
var'' 
token'' 
='' 
tokenHandler'' $
.''$ %
CreateToken''% 0
(''0 1
tokenDescriptor''1 @
)''@ A
;''A B
return(( 
tokenHandler(( 
.((  

WriteToken((  *
(((* +
token((+ 0
)((0 1
;((1 2
})) 	
}** 
}++ 